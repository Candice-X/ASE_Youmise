{"remainingRequest":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/eslint-loader/index.js??ref--18-0!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/store/store.js","dependencies":[{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/store/store.js","mtime":1521436325000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/package.json","mtime":1521570804000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":1521602987000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport user from './modules/user';\nVue.use(Vuex);\nvar debug = process.env.NODE_ENV !== 'production';\nexport default new Vuex.Store({\n  modules: {\n    user: user\n  }\n}); // mutations:{\n// },\n// actions: {\n//     setLogoutTime({commit},expirationTime) {\n//         setTimeout(() =>{\n//             commit('logout');\n//         },expirationTime *1000);\n//     },\n//     signup({commit},authData){\n//     },\n//     login({commit, dispatch},authData) {\n//         //success, status 200. Then auth user \n//         //store in local storage\n//         const now = new Date();\n//         const expirationDate = new Date(now.getTime() + res.data.expiresIn * 1000);\n//         localStorage.setItem('idToken', res.data.idToken);\n//         localStorage.setItem('userName', res.data.userName);\n//         localStorage.setItem('userID', res.data.userID);\n//         localStorage.setItem('expirationDate', expirationDate);\n//         // commit('authUser',{\n//         //     idToken: res.data.idToken;\n//         //     userID \n//         // });\n//         //if success, set the expiration TIME for the auto logout\n//         //  dispatch('setLogoutTime',res.data.expiresIn);   \n//     },\n//     fetchUser({commit}) {\n//     },\n//     logout({commit},routerData) {\n//         commit('clearAuthData');\n//         localStorage.removeItem('expirationDate');\n//         localStorage.removeItem('idToken');\n//         localStorage.removeItem('userName');\n//         localStorage.removeItem('userID');\n//         routerData.push('/');\n//     },\n//     tryAutoLogin() {\n//         const token = localStorage.getItem('idToken');\n//         if(!token) {\n//             return;\n//         }\n//         const expirationDate = localStorage.getItem('expirationDate');\n//         const now = new Date();\n//         if(now >= expirationDate){\n//             return;\n//         }\n//         const userID = localStorage.getItem('userID');\n//         const userName = localStorage.getItem('userName');\n//         commit('authUser', {\n//             idToken: token,\n//             userID: userID,\n//             userName: userName,\n//         });\n//     }\n// },\n// getters: {\n// }",{"version":3,"sources":["src/store/store.js"],"names":["Vue","Vuex","user","use","debug","process","env","NODE_ENV","Store","modules"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEAF,IAAIG,GAAJ,CAAQF,IAAR;AACA,IAAMG,QAAQC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;AAEA,eAAe,IAAIN,KAAKO,KAAT,CAAe;AAC1BC,WAAS;AACLP;AADK;AADiB,CAAf,CAAf,C,CAMI;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA","sourceRoot":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport user from './modules/user';\n\nVue.use(Vuex);\nconst debug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n    modules: {\n        user,\n    },\n});\n\n    // mutations:{\n\n    // },\n    // actions: {\n    //     setLogoutTime({commit},expirationTime) {\n    //         setTimeout(() =>{\n    //             commit('logout');\n    //         },expirationTime *1000);\n    //     },\n\n    //     signup({commit},authData){\n            \n    //     },\n\n    //     login({commit, dispatch},authData) {\n                \n    //         //success, status 200. Then auth user \n\n    //         //store in local storage\n    //         const now = new Date();\n    //         const expirationDate = new Date(now.getTime() + res.data.expiresIn * 1000);\n\n    //         localStorage.setItem('idToken', res.data.idToken);\n    //         localStorage.setItem('userName', res.data.userName);\n    //         localStorage.setItem('userID', res.data.userID);\n    //         localStorage.setItem('expirationDate', expirationDate);\n\n    //         // commit('authUser',{\n    //         //     idToken: res.data.idToken;\n    //         //     userID \n    //         // });\n\n    //         //if success, set the expiration TIME for the auto logout\n    //         //  dispatch('setLogoutTime',res.data.expiresIn);   \n    //     },\n    //     fetchUser({commit}) {\n\n    //     },\n    //     logout({commit},routerData) {\n    //         commit('clearAuthData');\n    //         localStorage.removeItem('expirationDate');\n    //         localStorage.removeItem('idToken');\n    //         localStorage.removeItem('userName');\n    //         localStorage.removeItem('userID');\n    //         routerData.push('/');\n    //     },\n    //     tryAutoLogin() {\n    //         const token = localStorage.getItem('idToken');\n    //         if(!token) {\n    //             return;\n    //         }\n    //         const expirationDate = localStorage.getItem('expirationDate');\n    //         const now = new Date();\n    //         if(now >= expirationDate){\n    //             return;\n    //         }\n    //         const userID = localStorage.getItem('userID');\n    //         const userName = localStorage.getItem('userName');\n    //         commit('authUser', {\n    //             idToken: token,\n    //             userID: userID,\n    //             userName: userName,\n    //         });\n    //     }\n\n    // },\n    // getters: {\n\n    // }\n\n"]}]}