{"remainingRequest":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/components/Mycard.vue","dependencies":[{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/components/Mycard.vue","mtime":1524800783176},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/package.json","mtime":1524895759142},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/@babel/runtime/helpers/asyncToGenerator\";\nimport _objectSpread from \"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/@babel/runtime/helpers/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions } from 'vuex';\nimport axios from \"axios\";\nimport { required, email } from \"vuelidate/lib/validators\";\nexport default {\n  data: function data() {\n    return {\n      isReceiveModel: 'received',\n      search: '',\n      cards: [],\n      tempCards: [],\n      requests: [],\n      loading: 'true',\n      //this is for create record\n      oneCard: {\n        senderImg: this.$store.state.card.girl\n      },\n      cardsReceive: [],\n      cardsSend: []\n    };\n  },\n  methods: _objectSpread({}, mapActions(['']), {\n    showCard: function () {\n      var _showCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(index) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.oneCard = this.cards[index];\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function showCard(_x) {\n        return _showCard.apply(this, arguments);\n      };\n    }(),\n    setDefault: function setDefault() {},\n    // search card from all cards \n    searchCard: function searchCard() {\n      var re = this.search.toUpperCase();\n      var n = this.tempCards.length;\n\n      if (re.length === 0) {\n        this.cards = this.tempCards; // tempCard is used to store the temp cards info\n\n        return;\n      }\n\n      if (re.length > 0 && n > 0) {\n        this.cards = [];\n        var reg = new RegExp(re);\n\n        for (var i = 0; i < n; i++) {\n          var temp = reg.exec(this.tempCards[i].cardTitle.toUpperCase()) || reg.exec(this.tempCards[i].senderName.toUpperCase());\n\n          if (temp !== null) {\n            this.cards.push(this.tempCards[i]);\n          }\n        }\n\n        ;\n      }\n\n      ;\n    },\n    showReceivedCard: function () {\n      var _showReceivedCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var userID, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isReceiveModel = 'received';\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n                console.log(\"show received card:\", userID);\n                _context2.prev = 3;\n\n                if (!userID) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context2.next = 8;\n                return axios.get(\"/record/record/receiver/\".concat(userID));\n\n              case 8:\n                response = _context2.sent;\n                this.cards = response.data;\n                this.tempCards = response.data; // console.log(response.data);\n\n                this.$store.state.user.loading = false;\n                _context2.next = 14;\n                break;\n\n              case 14:\n                ;\n                _context2.next = 21;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.log(_context2.t0.response.data);\n                this.$store.state.user.loading = false;\n\n              case 21:\n                ;\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 17]]);\n      }));\n\n      return function showReceivedCard() {\n        return _showReceivedCard.apply(this, arguments);\n      };\n    }(),\n    showSendCard: function () {\n      var _showSendCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var userID, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.isReceiveModel = 'sent';\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n                console.log(\"show send card:\", userID);\n                _context3.prev = 3;\n\n                if (!userID) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context3.next = 8;\n                return axios.get(\"/record/record/sender/\".concat(userID));\n\n              case 8:\n                response = _context3.sent;\n                // this.cards = response.data;\n                this.cards = response.data;\n                this.tempCards = response.data; // console.log(response.data);\n\n                this.$store.state.user.loading = false;\n                _context3.next = 14;\n                break;\n\n              case 14:\n                ;\n                _context3.next = 21;\n                break;\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](3);\n                console.log(_context3.t0.response.data);\n                this.$store.state.user.loading = false;\n\n              case 21:\n                ;\n\n              case 22:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 17]]);\n      }));\n\n      return function showSendCard() {\n        return _showSendCard.apply(this, arguments);\n      };\n    }(),\n    // card in use\n    showRequest: function () {\n      var _showRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var userID, response, response2, res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.isReceiveModel = 'request';\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n                _context4.prev = 2;\n\n                if (!userID) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context4.next = 7;\n                return axios.get(\"/record/record/receiver/\".concat(userID, \"/6\"));\n\n              case 7:\n                response = _context4.sent;\n                _context4.next = 10;\n                return axios.get(\"/record/record/sender/\".concat(userID, \"/6\"));\n\n              case 10:\n                response2 = _context4.sent;\n                res = response.data.concat(response2.data);\n                this.cards = res; // console.log(response.data);\n\n                this.$store.state.user.loading = false;\n                _context4.next = 16;\n                break;\n\n              case 16:\n                ;\n                _context4.next = 23;\n                break;\n\n              case 19:\n                _context4.prev = 19;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0.response.data);\n                this.$store.state.user.loading = false;\n\n              case 23:\n                ;\n\n              case 24:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 19]]);\n      }));\n\n      return function showRequest() {\n        return _showRequest.apply(this, arguments);\n      };\n    }(),\n    // send card \n    // record status:\n    // 1: 有效的卡片，具有收卡人，发卡人，在有效期内，\n    // 2：已发送但是没有接收人，\n    // 3： 邀请卡类型，接收人为多人（不建议新增这个状态。。。）\n    // 4： 过期卡\n    // 5： 已使用\n    // 6： 使用中，等待对方确认(这个多余了， 确认以后再update就好了\n    useCard: function () {\n      var _useCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var userID, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\"); // let rec = this.onCard.recordid;\n\n                console.log(\"record:\", this.oneCard);\n                _context5.prev = 2;\n\n                if (!userID) {\n                  _context5.next = 23;\n                  break;\n                }\n\n                if (!(this.oneCard.status === 1)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                this.oneCard.status = 6;\n                _context5.next = 13;\n                break;\n\n              case 8:\n                if (!(this.oneCard.status === 6)) {\n                  _context5.next = 12;\n                  break;\n                }\n\n                //mark as complete\n                this.oneCard.status = 5;\n                _context5.next = 13;\n                break;\n\n              case 12:\n                return _context5.abrupt(\"return\", \"status cannot change\");\n\n              case 13:\n                jQuery(\"#Dashboard_send\").modal('hide');\n                this.oneCard[\"title\"] = null;\n                this.oneCard[\"msgContent\"] = null; // this.oneCard[\"title\"] = this.oneCard.receiverName + \" want to use the \" + this.oneCard.cardTitle;\n                // this.oneCard[\"msgContent\"] = this.oneCard.receiverName + \" want to use the \" + this.oneCard.cardTitle + \" which you sent to him/her at \" + this.oneCard.createDate + \". Last time you said: \" + this.oneCard.cardContent;\n\n                _context5.next = 18;\n                return axios.patch(\"/record/record/\".concat(this.oneCard.recordid), this.oneCard);\n\n              case 18:\n                response = _context5.sent;\n                // const response = await axios.post(`/record/usecard`,this.oneCard);\n                //show the alert messager\n                jQuery(\".send_card_alert\").fadeIn();\n                setTimeout(function () {\n                  jQuery(\".send_card_alert\").fadeOut();\n                }, 3500);\n                _context5.next = 23;\n                break;\n\n              case 23:\n                ;\n                _context5.next = 29;\n                break;\n\n              case 26:\n                _context5.prev = 26;\n                _context5.t0 = _context5[\"catch\"](2);\n                console.log(\"usercard: \", _context5.t0.response.data);\n\n              case 29:\n                ;\n\n              case 30:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 26]]);\n      }));\n\n      return function useCard() {\n        return _useCard.apply(this, arguments);\n      };\n    }()\n  }),\n  components: {// Nav,\n  },\n  created: function created() {\n    this.$store.state.isLogin = true;\n    this.showReceivedCard();\n  }\n};",{"version":3,"sources":["Mycard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AAEA;wBAEA;;sBAEA;cACA;aACA;iBACA;gBACA;eAEA;AACA;;0CAEA,AAEA;AAHA;oBAIA;iBACA,AACA;AAfA;AAgBA;AACA,yCACA;;;;+CACA;;;;;0CACA,AAEA;;;;;;;;;;;;;;uCAEA;AACA;sCACA;2BACA;6BAEA;;2BACA;qCACA;;AACA;AACA;;kCACA;qBACA;6BAEA;;oCACA;kHACA;;6BACA;2CACA;AACA;AACA;;;AAEA;;;AAEA;AACA;;;;;;;;;sCACA;+EACA;mDACA,AACA;;;qBACA;;;;;iDACA;;mEACA;;;;sCACA;0CACA,MACA;;iDACA,AAEA;;;;;AAEA,AACA;;;;;;;kDACA;iDACA;;;AACA,AAEA;;;;;;;;;;;;;;AACA;;;;;;;;;sCAEA;+EACA;+CACA,AACA;;;qBACA;;;;;iDACA;;iEACA;;;;AACA;sCACA;0CACA,MACA;;iDACA,AAEA;;;;;AAEA,AACA;;;;;;;kDACA;iDACA;;;AACA,AAEA;;;;;;;;;;;;;;AACA;AACA;;;;;;;;;sCAEA;+EACA,AACA;;;qBACA;;;;;iDACA;;mEAEA;;;;;iEAEA;;;;qDACA;6BACA,KACA;;iDACA,AAEA;;;;;AAEA,AACA;;;;;;;kDACA;iDACA;;;AACA,AAEA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;+EAEA,WACA;;4CACA,AACA;;;qBACA;;;;;8CACA;;;;;sCACA;;;;;8CACA;;;;;AACA;sCACA,AACA;;;;;kDACA,AACA;;;gDAEA;wCACA;6CACA,MACA;AACA;;;yFACA;;;;AACA;AACA;2CACA;uCACA;6CACA;mBAEA,AAEA;;;;;AAEA,AAEA;;;;;;;gEACA;;;AACA,AAIA,AACA;;;;;;;;;;;;;;;eAEA,AACA;AAFA;8BAGA;gCACA;SACA;AAEA;AAnLA","file":"Mycard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id='mycards'>\n    <!--- body -->\n    <div id=\"my_cards\" class=\"body_cont\">\n      <div class=\"send_cards_container\">\n        <div class=\"form-inline\">\n  \n          <input class=\"form-control form-control-sm search_bar \" type=\"text\" placeholder=\"Search\" v-model=\"search\" @keyup=\"searchCard\" @focus=\"setDefault\" aria-label=\"Search\">\n        </div>\n  \n        <center>\n          <button class=\"btn btn-primary btn-outline-success\" :class=\"{ active: isReceiveModel==='received' }\" @click=\"showReceivedCard\">Received</button>\n          <button class=\"btn btn-primary btn-outline-success\" :class=\"{ active: isReceiveModel ==='sent' }\" @click=\"showSendCard\">Sent</button>\n          <button class=\"btn btn-primary btn-outline-success\" :class=\"{ active: isReceiveModel==='request' }\" @click=\"showRequest\">In Use</button>\n        </center>\n  \n        <div class=\"row\">\n          <!-- if empty -->\n          <div class=\"empty_msg\" style=\"\" v-if=\"cards.length===0\">\n            You don't have any Card right now\n            <router-link class=\"btn btn-secondary btn-primary\" to=\"/dashboard\"> Send Card to Friends </router-link>\n          </div>\n          <div v-for=\"(card, index) in cards\" :key=\"index\" class=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-xs-12 card_cont card_cont_mobile\">\n            <div class=\"card_img\" data-toggle=\"modal\" data-target=\"#Dashboard_send\" @click=\"showCard(index)\">\n              <img v-bind:src=\"card.cardImgURL\" />\n              <!-- <div class=\"stamp\" ><img src=\"https://s3.us-east-2.amazonaws.com/umisefrontendimages/stamp.png\" /></div> -->\n              <div class=\"sender_cont \">\n                <div class='avatar'>\n                  <img src=\"../assets/img/girl.png\" />\n                </div>\n                <div class=\"content\">\n                  <h4>{{ card.cardTitle }}</h4>\n                  <p class=\"sub_title\">{{ card.senderName }}</p>\n                  <span class=\"time\">{{card.createDate.substring(0,10)}}</span>\n                </div>\n  \n              </div>\n  \n            </div>\n          </div>\n  \n  \n        </div>\n        <!-- end of row -->\n      </div>\n  \n      <!-- alert message -->\n      <div class=\"send_card_alert\" style=\"display:none;\">\n        <p class=\"alert_info\"> Send use card request to <strong style=\"color:green;font-weight:600;\">{{this.oneCard.receiverEmail}} </strong> Successfully! </p>\n      </div>\n      <!-- end of alert -->\n  \n      <!-- Modal -->\n      <div class=\"modal fade bd-example-modal-lg\" id=\"Dashboard_send\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\" style=\"background:rgba(1,1,1,0.6)\">\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\" style=\"width:350px;padding:0;border:0;margin:auto\">\n          <div class=\"modal-content\" style=\"background:none;\">\n  \n            <div class=\"modal-body\" style=\"height:557px;\">\n              <div class=\" card_cont \">\n  \n                <div class=\"card_img card_img_more\">\n                  <img v-bind:src=\"this.oneCard.cardImgURL\" />\n                  <div class=\"sender_cont sender_cont_one \">\n                    <div class='avatar one_avatar'>\n                      <img src=\"../assets/img/girl.png\" />\n                      <p class=\"userName\">{{ this.oneCard.senderName }}</p>\n                    </div>\n                    <div class=\"content_one one_send_cont\">\n                      <!-- <h4>{{ this.oneCard.cardTitle }}</h4>\n                                    <p class=\"sub_title\">{{ this.oneCard.senderName}}</p> -->\n                      <p>{{this.oneCard.cardContent}}</p>\n  \n                    </div>\n  \n                  </div>\n                  <div class=\"promise_msg\">\n                    <p>{{this.oneCard.cardNote}}</p>\n                  </div>\n                </div>\n                <!-- use card -->\n                <div>\n                  <div v-if=\"isReceiveModel==='received' && this.oneCard.status ===1\" class=\"use_card \" @click=\"useCard\">\n                    <a> Use This Promise Card</a>\n                  </div>\n  \n                  <div v-if=\"this.oneCard.status ===5\" class=\"use_card \" style=\"background:pink;\">\n                    <a> Promise Completed</a>\n                  </div>\n                  <div v-if=\" this.oneCard.status ===6 && this.$store.state.user.userID !== this.oneCard.receiverid\" class=\"use_card \" style=\"background:green;\">\n                    <a> Promise Card in Using</a>\n  \n                  </div>\n                  <div v-if=\"this.oneCard.status ===6 && this.$store.state.user.userID === this.oneCard.receiverid \" class=\"use_card \" @click=\"useCard\">\n                    <a> Mark Promise Complete</a>\n                  </div>\n                  <div v-if=\"this.oneCard.status ===4\" class=\"use_card \" style=\"background:red;\">\n                    <a> Promise Card Expired</a>\n                  </div>\n                  <div v-if=\"isReceiveModel==='sent' && this.oneCard.status ===1\" class=\"use_card \" style=\"\">\n                    <a> Promise Card Sent to Friend</a>\n                  </div>\n                </div>\n                <!-- end use card -->\n              </div>\n  \n            </div>\n  \n          </div>\n        </div>\n      </div>\n      <!-- end of card one -->\n    </div>\n  \n  </div>\n</template>\n\n<script>\n  import { mapActions } from 'vuex';\n  import axios from \"axios\";\n  import { required, email } from \"vuelidate/lib/validators\";\n  \n  export default {\n    data() {\n      return {\n        isReceiveModel: 'received',\n        search: '',\n        cards: [],\n        tempCards: [],\n        requests: [],\n        loading: 'true',\n  \n        //this is for create record\n        oneCard: {\n          senderImg: this.$store.state.card.girl,\n        },\n  \n        cardsReceive: [],\n        cardsSend: [],\n      };\n    },\n    methods: {\n      ...mapActions(['']),\n      async showCard(index) {\n        this.oneCard = this.cards[index];\n      },\n  \n      setDefault() {},\n  \n      // search card from all cards \n      searchCard() {\n        let re = this.search.toUpperCase();\n        let n = this.tempCards.length;\n  \n        if (re.length === 0) {\n          this.cards = this.tempCards; // tempCard is used to store the temp cards info\n          return;\n        }\n        if (re.length > 0 && n > 0) {\n          this.cards = [];\n          let reg = new RegExp(re);\n  \n          for (let i = 0; i < n; i++) {\n            let temp = reg.exec(this.tempCards[i].cardTitle.toUpperCase()) || reg.exec(this.tempCards[i].senderName.toUpperCase());\n            if (temp !== null) {\n              this.cards.push(this.tempCards[i]);\n            }\n          };\n        };\n  \n      },\n  \n      async showReceivedCard() {\n        this.isReceiveModel = 'received';\n        const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n        console.log(\"show received card:\", userID);\n        try {\n          if (userID) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/record/record/receiver/${userID}`);\n            this.cards = response.data;\n            this.tempCards = response.data;\n            // console.log(response.data);\n            this.$store.state.user.loading = false;\n          } else {\n  \n          };\n  \n        } catch (e) {\n          console.log(e.response.data);\n          this.$store.state.user.loading = false;\n        };\n      },\n  \n      async showSendCard() {\n        this.isReceiveModel = 'sent';\n  \n        const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n        console.log(\"show send card:\", userID);\n        try {\n          if (userID) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/record/record/sender/${userID}`);\n            // this.cards = response.data;\n            this.cards = response.data;\n            this.tempCards = response.data;\n            // console.log(response.data);\n            this.$store.state.user.loading = false;\n          } else {\n  \n          };\n  \n        } catch (e) {\n          console.log(e.response.data);\n          this.$store.state.user.loading = false;\n        };\n      },\n  \n      // card in use\n      async showRequest() {\n        this.isReceiveModel = 'request';\n  \n        const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n        try {\n          if (userID) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/record/record/receiver/${userID}/6`);\n  \n            const response2 = await axios.get(`/record/record/sender/${userID}/6`);\n  \n            const res = response.data.concat(response2.data);\n            this.cards = res;\n            // console.log(response.data);\n            this.$store.state.user.loading = false;\n          } else {\n  \n          };\n  \n        } catch (e) {\n          console.log(e.response.data);\n          this.$store.state.user.loading = false;\n        };\n      },\n  \n      // send card \n      // record status:\n      // 1: 有效的卡片，具有收卡人，发卡人，在有效期内，\n      // 2：已发送但是没有接收人，\n      // 3： 邀请卡类型，接收人为多人（不建议新增这个状态。。。）\n      // 4： 过期卡\n      // 5： 已使用\n      // 6： 使用中，等待对方确认(这个多余了， 确认以后再update就好了\n      async useCard() {\n        const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n  \n        // let rec = this.onCard.recordid;\n        console.log(\"record:\", this.oneCard);\n        try {\n          if (userID) {\n            if (this.oneCard.status === 1) {\n              this.oneCard.status = 6;\n            } else if (this.oneCard.status === 6) {\n              //mark as complete\n              this.oneCard.status = 5;\n            } else {\n              return \"status cannot change\";\n            }\n            jQuery(\"#Dashboard_send\").modal('hide');\n  \n            this.oneCard[\"title\"]=null;\n            this.oneCard[\"msgContent\"] =null;\n            // this.oneCard[\"title\"] = this.oneCard.receiverName + \" want to use the \" + this.oneCard.cardTitle;\n            // this.oneCard[\"msgContent\"] = this.oneCard.receiverName + \" want to use the \" + this.oneCard.cardTitle + \" which you sent to him/her at \" + this.oneCard.createDate + \". Last time you said: \" + this.oneCard.cardContent;\n            const response = await axios.patch(`/record/record/${this.oneCard.recordid}`, this.oneCard);\n            // const response = await axios.post(`/record/usecard`,this.oneCard);\n            //show the alert messager\n            jQuery(\".send_card_alert\").fadeIn();\n            setTimeout(() => {\n              jQuery(\".send_card_alert\").fadeOut();\n            }, 3500);\n  \n          } else {\n  \n          };\n  \n        } catch (e) {\n  \n          console.log(\"usercard: \", e.response.data);\n        };\n      },\n  \n  \n  \n    },\n    components: {\n      // Nav,\n    },\n    created: function() {\n      this.$store.state.isLogin = true;\n      this.showReceivedCard();\n    },\n  \n  };\n</script>\n\n<style scoped>\n  @import \"../assets/css/font-awesome.min.css\";\n  @import \"../assets/css/simple-line-icons.css\";\n  body {\n    font-family: \"Open Sans\", serif;\n    padding-top: 54px;\n    color: #868e96;\n    width: 100%;\n    height: 100vh;\n    min-height: 775px;\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n  \n  .empty_msg {\n    margin: auto;\n    text-align: center;\n    margin-top: 10em;\n    color: white;\n    font-size: 1rem;\n  }\n  \n  .send_cards_container button {\n    color: #ffffff;\n    margin-left: 15px;\n  }\n  \n  .sender_cont {\n    width: 100%;\n    text-align: left;\n    margin-top: 0;\n    padding: 0;\n  }\n  \n  .sender_cont_one {\n    position: relative;\n    margin-top: -100px;\n  }\n  \n  .avatar {\n    position: relative;\n    top: -10px;\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    padding: 0;\n    margin-left: 10px;\n  }\n  \n  .avatar img {\n    width: 40px;\n    height: 40px !important;\n    border-radius: 50% !important;\n  }\n  \n  .content {\n    width: 150px;\n    margin-left: 8px;\n    display: inline-block;\n    line-height: 1em;\n  }\n  \n  .card_cont {\n    /* background:#dcdcdc; */\n    display: block;\n    width: auto;\n    padding: 0;\n    margin: 0px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n  }\n  \n  .row {\n    width: auto;\n    padding: 0;\n    margin: 0;\n    margin-left: 20px;\n    padding-bottom: 50px;\n    margin-bottom: 200px;\n  }\n  \n  .card_img {\n    width: 220px;\n    margin: 10px 25px;\n    background: #dcdcdc;\n    height: 320px;\n    border-radius: 5px;\n  }\n  \n  .card_img:hover {\n    background: #3ac17e;\n    /* opacity: 1; */\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .card_img_more {\n    /* width: 220px; */\n    /* margin: 10px 25px; */\n    background: #3ac17e;\n    /* height: 320px; */\n    margin: 0;\n    border-radius: 5px;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .card_img_more:hover {\n    /* background: #3ac17e; */\n    /* opacity: 0.9; */\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .customize-icon-cont {\n    border: 4px dashed #fff;\n    width: 220px;\n    margin: 10px 25px;\n    background: rgba(0, 0, 0, 0.2);\n    height: 320px;\n    border-radius: 5px;\n    color: #fff;\n    color: #fff;\n  }\n  \n  .customize-icon-cont i {\n    font-size: 6em;\n    text-align: center;\n    position: relative;\n    top: 80px;\n  }\n  \n  .customize-icon {\n    /* opacity: 0.8; */\n    opacity: 1;\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 180px;\n  }\n  \n  .card_cont img {\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 260px;\n  }\n  \n  .send_cards_container {\n    height: auto;\n    margin-top: 50px;\n    margin-left: 0rem;\n  }\n  \n  .title {\n    text-align: left;\n    font-size: 1.8em;\n    color: #fff;\n    margin-left: 50px;\n  }\n  \n  .subTitle {\n    color: #ddd;\n    font-size: 0.9em;\n    margin-left: 50px;\n    text-align: left;\n  }\n  \n  #mycards {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    background: #f0f3f6;\n    background: url(\"../assets/img/bg1.jpg\") no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    height: 100vh;\n    min-height: 786px;\n    /* min-height: 786px; */\n    overflow-x: hidden;\n  }\n  \n  @media (min-width: 992px) {\n    .send_cards_container {\n      height: auto;\n      margin-top: 0px;\n      margin-left: 0rem;\n    }\n  }\n  \n  h1 {\n    font-size: 6rem;\n    line-height: 5.5rem;\n  }\n  \n  h2 {\n    font-size: 3.5rem;\n  }\n  \n  .card_img h4 {\n    margin-top: 8px;\n    font-size: 0.9rem;\n  }\n  \n  .card_img p {\n    font-size: 0.7rem;\n  }\n  \n  .subheading {\n    font-weight: 500;\n    font-size: 1.35rem;\n  }\n  \n  li {\n    text-align: left;\n    font-size: 0.8rem;\n    margin: 5px;\n    padding: 2px;\n  }\n  \n  li:hover {\n    background: #aaa;\n    color: #000;\n    border-radius: 3px;\n  }\n  \n  li a {\n    color: #ffffff;\n  }\n  \n  li:hover,\n  a:hover {\n    color: #fff !important;\n  }\n  \n  .nav_active {\n    background: #3ac17e !important;\n    color: #ffffff;\n    border-radius: 3px;\n  }\n  \n  li:active {\n    background: #3ac17e;\n    color: #ffffff;\n    border-radius: 3px;\n  }\n  \n  #sideNav .navbar-nav .nav-item .nav-link {\n    font-weight: 600;\n    text-transform: uppercase;\n  }\n  \n  @media (min-width: 992px) {\n    #sideNav {\n      text-align: center;\n      position: fixed;\n      top: 0;\n      left: 0;\n      display: flex;\n      flex-direction: column;\n      width: 17rem;\n      height: 100vh;\n    }\n    #sideNav .navbar-brand {\n      display: flex;\n      margin: auto auto 0;\n      padding: 0.5rem;\n    }\n    #sideNav .navbar-brand .img-profile {\n      max-width: 6rem;\n      max-height: 10rem;\n      border: 0.1rem solid #3ac17e;\n    }\n    #sideNav .navbar-collapse {\n      display: flex;\n      align-items: flex-start;\n      flex-grow: 0;\n      width: 100%;\n      margin-bottom: auto;\n    }\n    #sideNav .navbar-collapse .navbar-nav {\n      flex-direction: column;\n      width: 100%;\n    }\n    #sideNav .navbar-collapse .navbar-nav .nav-item {\n      display: block;\n    }\n    #sideNav .navbar-collapse .navbar-nav .nav-item .nav-link {\n      display: block;\n    }\n  }\n  \n  section.resume-section {\n    border-bottom: 1px solid #dee2e6;\n    padding-top: 5rem !important;\n    padding-bottom: 5rem !important;\n  }\n  \n  section.resume-section .resume-item .resume-date {\n    min-width: none;\n  }\n  \n  @media (min-width: 768px) {\n    section.resume-section {\n      min-height: 100vh;\n    }\n    section.resume-section .resume-item .resume-date {\n      min-width: 18rem;\n    }\n    .send_cards_container {\n      width: auto;\n      height: auto;\n      margin-left: 0rem;\n      margin-top: 55px;\n    }\n    .body_cont {\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-left: 0rem;\n      /* min-height: 775px; */\n    }\n  }\n  \n  @media (min-width: 992px) {\n    section.resume-section {\n      padding-top: 3rem !important;\n      padding-bottom: 3rem !important;\n    }\n    .body_cont {\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-top: 0px !important;\n      padding-left: 17rem !important;\n      /* min-height: 775px; */\n    }\n  }\n  \n  .bg-primary {\n    background-color: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  i {\n    margin-left: 15px;\n    margin-right: 25px;\n  }\n  \n  .text-primary {\n    color: #000 !important;\n  }\n  \n  .js-scroll-trigger {\n    color: #ffffff !important;\n  }\n  \n  .profile-usertitle-name {\n    color: #eeeeee;\n  }\n  \n  .body_cont {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: block;\n    float: left;\n    /* min-height: 775px;  */\n  }\n  \n  .sender_cont_more img {\n    width: 90px;\n    margin-top: 25px;\n  }\n  \n  .content_more {\n    margin-top: 15px;\n  }\n  \n  .message_more {\n    background: #eeeeee;\n    border-radius: 5px;\n    margin: 10px;\n    display: block;\n    text-align: left;\n    padding: 15px;\n    height: 90px;\n    font-size: 0.9em;\n  }\n  \n  .btn-send {\n    width: 100%;\n  }\n  \n  .create_data {\n    font-size: 0.8em;\n    color: #bbb;\n  }\n  \n  .card_img_more {\n    width: 330px;\n    /* margin: 10px 25px; */\n    background: #3ac17e;\n    height: 500px;\n    border-radius: 5px;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .card_img_more:hover {\n    /* background: #3ac17e; */\n    /* opacity: 1; */\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  \n  /* .card_img_more:hover + .use_card{\n      display:block;\n      background:red;\n    } */\n  \n  .card_img_more img {\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 500px;\n  }\n  \n  .userName {\n    color: #fff;\n    font-size: 0.8em;\n    text-align: center;\n  }\n  \n  .content_one {\n    width: 240px;\n    height: 80px;\n    font-size: 0.8em;\n    padding: 5px;\n    background: #dcdcdc;\n    border-radius: 5px;\n    color: #222;\n    margin-left: 8px;\n    display: inline-block;\n    word-wrap: normal;\n    line-height: 1.5em;\n    padding-top: 5px;\n    opacity: 1;\n    margin-left: 10px;\n    overflow: hidden;\n  }\n  \n  .message_more {\n    background: #eeeeee;\n    border-radius: 5px;\n    display: block;\n    text-align: left;\n    padding: 15px;\n    margin: 10px;\n    height: 100px;\n    font-size: 0.85em;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .one_send_cont {\n    margin-top: 10px;\n  }\n  \n  .one_avatar {\n    float: left;\n    margin-top: 20px;\n  }\n  \n  .promise_msg {\n    word-wrap: normal;\n    width: 210px;\n    height: 110px;\n    overflow: hidden;\n    position: relative;\n    color: #fff;\n    font-size: 0.9em;\n    margin: auto;\n    top: -260px;\n    text-align: left;\n    line-height: 1.5em;\n  }\n  \n  .use_card {\n    display: block;\n    z-index: 999;\n    /* opacity:0.8; */\n    position: relative;\n    width: 330px;\n    margin-top: -3px;\n    border-radius: 0 0 5px 5px;\n    color: #fff;\n    height: 60px;\n    padding: 5px;\n    padding-top: 15px;\n    background: #3ac17e;\n    cursor: pointer;\n    font-size: 1.2em;\n  }\n  \n  .user_card:hover {\n    background: red;\n  }\n  \n  .send_card_alert {\n    margin: auto;\n    z-index: 99;\n    text-align: center;\n    width: 25rem;\n    background: #ffc9aa;\n    border-radius: 5px;\n    height: 5rem;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    bottom: 0px;\n    right: 0px;\n  }\n  \n  .send_card_alert p {\n    padding: 0;\n    text-align: center;\n    margin-top: 1rem;\n    padding-top: 1em;\n    line-height: 2em;\n    display: block;\n  }\n  \n  .time {\n    float: right;\n    height: 20px;\n    font-size: 10px;\n    margin-top: -22px;\n    color: #555;\n  }\n  \n  .search_bar {\n    float: right;\n    width: auto;\n    position: absolute;\n    right: 40px;\n    top: 60px;\n  }\n  \n  .stamp {\n    position: absolute;\n    width: 60px;\n    right: 30px;\n    bottom: 40px;\n    height: 60px;\n  }\n  \n  .stamp img {\n    width: 60px;\n    height: 60px;\n  }\n  \n  @media (max-width:768px) {\n    .search_bar {\n      float: none !important;\n      width: 100%;\n      position: relative;\n      display: block;\n      top: 0;\n      right: 0;\n      margin: 15px;\n      margin-top: -15px;\n      padding: 10px;\n    }\n    #mycards {\n      margin-top: 55px;\n    }\n  }\n</style>\n"]}]}