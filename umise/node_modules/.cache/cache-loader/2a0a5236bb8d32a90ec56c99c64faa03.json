{"remainingRequest":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/components/Dashboard.vue","dependencies":[{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/components/Dashboard.vue","mtime":1524801643765},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/package.json","mtime":1524895759142},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/@babel/runtime/helpers/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import Nav from './DashboardNav';\nimport { required, email } from \"vuelidate/lib/validators\";\nimport Friends from './Friends';\nimport { mapState, mapActions, mapGetters } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      // name: 'kuer',\n      cardsType: [],\n      errMsg: '',\n      friendsList: [],\n      // used to send card to others\n      showFriendList: false,\n      oneCard: {\n        cardid: null,\n        cardName: '',\n        cardImgURL: null,\n        cardNote: '',\n        sender: null,\n        senderImg: this.$store.state.card.girl,\n        receiverEmail: '',\n        // expire:'Forever',\n        message: '',\n        receiverName: ''\n      },\n      searchFriendList: [],\n      sendCardRecord: {\n        senderid: '',\n        receiverid: '',\n        cardid: '',\n        expireDate: null,\n        finishDate: null,\n        cardContent: '',\n        cardTitle: '',\n        receiverEmail: ''\n      }\n    };\n  },\n  validations: {\n    oneCard: {\n      receiverName: {\n        required: required\n      }\n    }\n  },\n  components: {\n    Friends: Friends\n  },\n  methods: {\n    showCard: function showCard(index) {\n      this.oneCard = this.cardsType[index];\n    },\n    shareToFacebook: function shareToFacebook() {\n      FB.ui({\n        method: 'share',\n        href: 'https://umise.me',\n        picture: 'https://s3.us-east-2.amazonaws.com/umisefrontendimages/Chance_Card.jpg',\n        title: 'This is my page',\n        description: \"Hello, this is just a test\",\n        caption: \"picture caption\"\n      }, function (response) {\n        console.log(\"feed:\", response);\n      });\n    },\n    chooseFriend: function chooseFriend(index) {\n      console.log(index);\n      this.oneCard.receiverName = this.searchFriendList[index].username;\n      this.oneCard.receiverEmail = this.searchFriendList[index].email;\n      this.showFriendList = false;\n      console.log(this.oneCard.receiverName);\n    },\n    //friendList\n    autoComplete: function autoComplete() {\n      var re = this.oneCard.receiverName.toUpperCase();\n      var n = this.friendsList.length;\n\n      if (re.length === 0) {\n        this.searchFriendList = this.friendsList;\n        return;\n      }\n\n      if (re.length > 0 && n > 0) {\n        this.searchFriendList = []; // let reg = new RegExp('.*'+re+'.*');\n\n        var reg = new RegExp(re);\n\n        for (var i = 0; i < n; i++) {\n          var temp = reg.exec(this.friendsList[i].username.toUpperCase());\n\n          if (temp !== null) {\n            this.searchFriendList.push(this.friendsList[i]);\n          } //  let temp =  this.friendsList[i].username.toUpperCase().exec(reg);\n          // let temp = reg.exec(this.friendsList[i].username.toUpperCase());\n\n\n          console.log(\"test:\", temp);\n        }\n\n        ;\n      }\n\n      ;\n    },\n    //send card to friends\n    sendCard: function () {\n      var _sendCard = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var userID, resp;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.errMsg = '';\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n                console.log(\"userid :\", userID);\n\n                if (!userID) {\n                  _context.next = 23;\n                  break;\n                }\n\n                this.sendCardRecord.senderid = userID;\n                this.sendCardRecord.receiverEmail = this.oneCard.receiverEmail;\n                this.sendCardRecord.cardid = this.oneCard.cardid;\n                this.sendCardRecord.expireDate = null;\n                this.sendCardRecord.cardContent = this.oneCard.message;\n                this.sendCardRecord.cardTitle = this.oneCard.cardName;\n                this.sendCardRecord.receiverid = null;\n                this.sendCardRecord[\"title\"] = this.sendCardRecord.receiverEmail + \" send card\" + this.oneCard.cardName;\n                this.sendCardRecord[\"msgContent\"] = this.oneCard.sender + \" send a card { \" + this.oneCard.cardName + \" } to \" + this.oneCard.receiverEmail + \" at \" + new Date() + \".\"; // console.log(\"send record object :\", this.sendCardRecord);\n\n                this.$store.state.user.loading = true;\n                _context.next = 17;\n                return axios.post('/record/record', this.sendCardRecord);\n\n              case 17:\n                resp = _context.sent;\n                this.$store.state.user.loading = false;\n                jQuery(\"#Dashboard_send\").modal('hide');\n                this.showAlert();\n                _context.next = 24;\n                break;\n\n              case 23:\n                throw new Error(\"Please login in first\");\n\n              case 24:\n                ;\n                _context.next = 33;\n                break;\n\n              case 27:\n                _context.prev = 27;\n                _context.t0 = _context[\"catch\"](0);\n                this.errMsg = _context.t0.response.data;\n                console.log(_context.t0);\n                console.log(_context.t0.response.data);\n                this.$store.state.user.loading = false;\n\n              case 33:\n                ;\n\n              case 34:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 27]]);\n      }));\n\n      return function sendCard() {\n        return _sendCard.apply(this, arguments);\n      };\n    }(),\n    cancle: function cancle() {\n      jQuery(\"#Dashboard_send\").modal('hide');\n    },\n    getFriendsList: function () {\n      var _getFriendsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var userID, response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n\n                if (!userID) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context2.next = 6;\n                return axios.get(\"/friend//listFriends/\".concat(userID));\n\n              case 6:\n                response = _context2.sent;\n                console.log(response.data);\n                this.searchFriendList = response.data;\n                this.$store.state.user.friendList = response.data;\n                this.friendsList = this.$store.state.user.friendList; // console.log(\"friendsList :\", this.friendsList);\n\n                this.$store.state.user.loading = false;\n                _context2.next = 14;\n                break;\n\n              case 14:\n                ;\n                _context2.next = 21;\n                break;\n\n              case 17:\n                _context2.prev = 17;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0.response.data);\n                this.$store.state.user.loading = false;\n\n              case 21:\n                ;\n\n              case 22:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 17]]);\n      }));\n\n      return function getFriendsList() {\n        return _getFriendsList.apply(this, arguments);\n      };\n    }(),\n    showAlert: function () {\n      var _showAlert = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                jQuery(\".send_card_alert\").fadeIn();\n                setTimeout(function () {\n                  jQuery(\".send_card_alert\").fadeOut();\n                }, 3500);\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function showAlert() {\n        return _showAlert.apply(this, arguments);\n      };\n    }()\n  },\n  created: function created() {\n    this.$store.state.user.isLogin = true; // this.cardsType = this.$store.getters.getAllCardTypeFromState;\n    // console.log(\"cards type:\",cardsType);\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    try {\n      this.$store.state.user.loading = true;\n      axios.get(\"/card/card\").then(function (res) {\n        console.log(\"get all cards types\", res.data); // this.setAllCardType(res.data);\n\n        _this.$store.state.card.sendCardTypes = res.data;\n        _this.cardsType = _this.$store.state.card.sendCardTypes;\n        _this.$store.state.user.loading = false;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } catch (e) {\n      console.log(e.response.data);\n      this.$store.state.user.loading = false;\n    }\n\n    ;\n    this.getFriendsList();\n  }\n};",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA;AACA;AAEA;wBAEA;;AAEA;iBACA;cACA;mBAEA;AACA;sBACA;;gBAEA;kBACA;oBACA;kBACA;gBACA;0CACA;uBACA;AACA;iBACA;sBACA,AACA;AAXA;wBAaA;;kBAEA;oBACA;gBACA;oBACA;oBACA;qBACA;mBACA;uBACA,AAEA,AACA;AAXA;AAtBA;AAmCA;;;;AAIA,AACA,AACA,AAEA;AALA;AADA;AADA;;AASA,AAEA;AAHA;;uCAKA;oCACA;AAEA;gDACA;;gBAEA;cACA;iBACA;eACA;qBACA;iBACA;AANA,6BAOA;6BACA;AACA;AAEA;+CACA;kBACA;+DACA;gEACA;4BACA;+BACA;AAEA;AACA;0CACA;yCACA;+BACA;;2BACA;qCACA;AACA;AACA;;kCACA;gCACA,IACA;;6BAEA;;;2DAEA;;6BACA;wDACA;AACA,WAJA,CAKA;AACA;;;+BACA;AACA;;;AAEA;;;AAEA;AACA;AACA,AACA;AAtDA;;;;;;;;;8BAuDA;+EAEA;wCACA;;qBACA;;;;;+CACA;iEACA;0DACA;iDACA;+DACA;6DACA;iDAEA;+GACA;oLAEA,KACA;;iDACA;;yDAEA;;;;iDACA;gDACA;qBACA,AACA;;;;;gCACA;;;AACA,AACA;;;;;;;mDACA;wBACA;iDACA;iDACA;;;AAEA,AAEA;;;;;;;;;;;;;;8BACA;sCACA;AAEA;AACA,AACA;;;;;;;;;;+EACA;;qBACA;;;;;iDACA;;gEACA;;;;qCACA;iDACA;6DACA;0DAEA,YACA;;iDACA,AAEA;;;;;AACA,AACA;;;;;;;kDACA;iDACA;;;AACA,AAEA;;;;;;;;;;;;;;AACA;;;;;;;;2CACA;uCACA;6CACA;mBAEA,AAEA,AAEA;;;;;;;;;;;;;;;8BACA;qCACA,MACA;AACA;AAEA;;AACA;;QACA;uCACA;gBACA,kCACA;+CACA,OACA;;oDACA;kDACA;0CAEA;AACA,gCACA;oBACA;AACA;gBACA;6BACA;uCACA;AACA;;;SAEA;AAGA;AA7MA","file":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id='nav_dashboard'>\n    <!--- body -->\n    <div id=\"send_cards\" class=\"body_cont\">\n      <div class=\"send_cards_container\">\n        <h4 class=\"title\">Send Cards</h4>\n        <h4 class=\"subTitle\">Choose a Card and send to your friends, or you can design your own card.</h4> \n        <div class=\"row card_row\">\n          <div v-for=\"(card, index) in cardsType\" :key=\"index\" :id=\"card.cardid\" \n          class=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 col-xs-12 card_cont card_cont_mobile\">\n            <div class=\"card_img\" data-toggle=\"modal\" data-target=\"#Dashboard_send\" @click=\"showCard(index)\">\n              <img v-bind:src=\"card.cardImgURL\" />\n              <h4> {{card.cardName}}</h4>\n              <!-- <h5 style=\"font-size:0.5rem;\">{{card.createdAt}}</h5> -->\n              <!-- <p class=\"sub_title\">{{card.cardNote}}</p> -->\n            </div>\n          </div>\n          <!-- <div class=\"col-md-3 col-md-4 col-sm-6 card_cont\">\n                      <div class=\"card_img customize-icon-cont\" >\n                          <div class=\"customize-icon\">\n                          <i class=\"icon-settings \"></i>\n                          </div>\n                          <h4 style=\"color:#fff;\">Customize Card</h4>\n                          <p class=\"sub_title\">Enjoy the Creations</p>\n                      </div>\n                  </div> -->\n        </div>\n      </div>\n  \n       <div> \n        <!-- alert message -->\n        <div class=\"send_card_alert\" style=\"display:none;\">\n          <p> Send Card to <strong style=\"color:green;font-weight:600;\">{{this.oneCard.receiverEmail}} </strong> Successfully! </p>\n        </div>\n        <!-- end of alert -->\n  \n        <!-- Modal -->\n        <div class=\"modal fade bd-example-modal-lg\" id=\"Dashboard_send\" tabindex=\"-1\" role=\"dialog\" \n        aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-lg modal-dialog-centered modal_size_ipad\" role=\"document\">\n            <div class=\"modal-content\">\n              <div class=\"modal-body\" style=\"height:560px;\">\n                <div class=\"row\">\n  \n                  <div class=\"col-lg-6 col-md-6 col-sm-12 col-xs-12 card_cont card_cont_one\">\n                    <div class=\"card_img_more\">\n  \n                      <img v-bind:src=\"this.oneCard.cardImgURL\" />\n                      <div class=\"sender_cont\">\n                        <div class='avatar'>\n                          <img src=\"../assets/img/girl.png\" />\n                          <p class=\"userName\">{{ this.$store.state.user.userName }}</p>\n                        </div>\n                        <div class=\"content\">\n                          <!-- <h7>{{ this.oneCard.cardName }}</h7> -->\n                          <p class=\"msg\">{{this.oneCard.message}}</p>\n  \n                        </div>\n                      </div>\n                      <div class=\"promise_msg\">\n                        <p>{{this.oneCard.cardNote}}</p>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"sender_cont_more col-lg-6 col-md-6 col-sm-12 col-xs-12\">\n  \n                    <div class=\"content_more\">\n                      <center>\n                        <h4>{{ this.oneCard.cardName }}</h4>\n                      </center>\n                    \n                      <label>Friend </label>\n                      <div class=\"input-group friend_list_cont\">\n                        <!-- <div class=\"friend_place_hoder\">Choose A Friend</div> -->\n                        <input type=\"text\" v-model=\"oneCard.receiverName\" @focus=\"showFriendList=true\" @blur=\"showFriendList=false\" \n                        @keyup=\"autoComplete\" class=\"form-control\" placeholder=\"Friend Name\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\n  \n                      </div>\n                      <!-- popup friend div -->\n                      <div class=\"friend_float_div\" v-if=\"showFriendList\">\n                        <div v-if=\"searchFriendList.length===0\">\n                          <p style=\"color:white;text-align:center;margin-top:100px;font-size:1em;\">You do not have friend named: {{this.oneCard.receiverName}} </p>\n                        </div>\n                        <div v-if=\"searchFriendList.length!==0\" v-for=\"(friend, index) in searchFriendList\" :key=\"index\" \n                        class=\"friend\" @mousedown=\"chooseFriend(index)\">\n                          <div class=\"friends_img\">\n                            <img src=\"../assets/img/girl.png\" />\n                          </div>\n                          <div class=\"friens_info\">\n                            <span>{{friend.username}} </span>\n                            <div class=\"card_info\">\n                              <p>{{friend.email}}</p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <!-- end of pop up friend div  -->\n                      <br/>\n                      <label>Expire Date</label>\n                      <div class=\"form-group\">\n                        <select class=\"form-control\" id=\"exampleFormControlSelect1\">\n                                <option value='Forever' checked >Never</option>\n                                <option value=\"1\" >1 Day</option>\n                                <option>1 Week</option>\n                                <option>1 Month</option>\n                                <option>1 Year</option>\n                              </select>\n                      </div>\n                      <label>Message</label>\n                      <textarea v-model=\"oneCard.message\" class=\"form-control message_more\" maxlength=\"140\" \n                      placeholder=\"Please input your message send to your friends\">\n                      How you have a great weekend, I will treat you a great dinner Next time :)\n                      </textarea>\n                    </div>\n                    <p style=\"color:red;margin:-13px;padding:0;\"> {{this.errMsg}}</p>\n                    <br/>\n                    <button class=\"btn btn-primary btn-success btn-send\" @click=\"sendCard\" :disabled=\"$v.oneCard.receiverName.$invalid\">Send to Friends</button>\n  \n                    <button class=\"btn btn-primary btn-outline-secondary btn-send btn-cancle\" @click=\"cancle\">Cancle</button>\n                  </div>\n                </div>\n  \n              </div>\n  \n            </div>\n          </div>\n        </div>\n        <!-- end of card one -->\n    </div>\n  \n  </div>\n  \n  </div>\n</template>\n\n<script>\n  // import Nav from './DashboardNav';\n  import { required, email } from \"vuelidate/lib/validators\";\n  import Friends from './Friends';\n  import { mapState, mapActions, mapGetters } from \"vuex\";\n  import axios from \"axios\";\n    \n  export default {\n    data() {\n      return {\n        // name: 'kuer',\n        cardsType: [],\n        errMsg: '',\n        friendsList: [],\n  \n        // used to send card to others\n        showFriendList: false,\n        oneCard: {\n          cardid: null,\n          cardName: '',\n          cardImgURL: null,\n          cardNote: '',\n          sender: null,\n          senderImg: this.$store.state.card.girl,\n          receiverEmail: '',\n          // expire:'Forever',\n          message: '',\n          receiverName: '',\n        },\n        searchFriendList: [],\n  \n        sendCardRecord: {\n          senderid: '',\n          receiverid: '',\n          cardid: '',\n          expireDate: null,\n          finishDate: null,\n          cardContent: '',\n          cardTitle: '',\n          receiverEmail: '',\n        },\n  \n      };\n    },\n\n    validations: {\n      oneCard: {\n        receiverName: {\n          required,\n        },\n      },\n    },\n  \n    components: {\n      Friends,  \n    },\n  \n    methods: {\n      showCard(index) {\n        this.oneCard = this.cardsType[index];\n      },\n  \n      shareToFacebook() {\n        FB.ui({\n          method: 'share',\n          href: 'https://umise.me',\n          picture: 'https://s3.us-east-2.amazonaws.com/umisefrontendimages/Chance_Card.jpg',\n          title: 'This is my page',\n          description: \"Hello, this is just a test\",\n          caption: \"picture caption\"\n        }, function(response) {\n          console.log(\"feed:\", response);\n        });\n      },\n  \n      chooseFriend(index) {\n        console.log(index);\n        this.oneCard.receiverName = this.searchFriendList[index].username;\n        this.oneCard.receiverEmail = this.searchFriendList[index].email;\n        this.showFriendList = false;\n        console.log(this.oneCard.receiverName);\n      },\n  \n      //friendList\n      autoComplete() {\n        let re = this.oneCard.receiverName.toUpperCase();\n        let n = this.friendsList.length;\n        if (re.length === 0) {\n          this.searchFriendList = this.friendsList;\n          return;\n        }\n        if (re.length > 0 && n > 0) {\n          this.searchFriendList = [];\n          // let reg = new RegExp('.*'+re+'.*');\n          let reg = new RegExp(re);\n  \n          for (let i = 0; i < n; i++) {\n            let temp = reg.exec(this.friendsList[i].username.toUpperCase());\n            if (temp !== null) {\n              this.searchFriendList.push(this.friendsList[i]);\n            }\n            //  let temp =  this.friendsList[i].username.toUpperCase().exec(reg);\n            // let temp = reg.exec(this.friendsList[i].username.toUpperCase());\n            console.log(\"test:\", temp);\n          };\n        };\n  \n      },\n  \n      //send card to friends\n      async sendCard() {\n        try {\n          this.errMsg = '';\n          const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n  \n          console.log(\"userid :\", userID);\n          if (userID) {\n            this.sendCardRecord.senderid = userID;\n            this.sendCardRecord.receiverEmail = this.oneCard.receiverEmail;\n            this.sendCardRecord.cardid = this.oneCard.cardid;\n            this.sendCardRecord.expireDate = null;\n            this.sendCardRecord.cardContent = this.oneCard.message;\n            this.sendCardRecord.cardTitle = this.oneCard.cardName;\n            this.sendCardRecord.receiverid = null;\n  \n            this.sendCardRecord[\"title\"] = this.sendCardRecord.receiverEmail + \" send card\" + this.oneCard.cardName;\n            this.sendCardRecord[\"msgContent\"] = this.oneCard.sender + \" send a card { \" + this.oneCard.cardName + \" } to \" + this.oneCard.receiverEmail + \" at \" + new Date() + \".\";\n  \n            // console.log(\"send record object :\", this.sendCardRecord);\n            this.$store.state.user.loading = true;\n            const resp = await axios.post('/record/record', this.sendCardRecord);\n  \n            this.$store.state.user.loading = false;\n            jQuery(\"#Dashboard_send\").modal('hide');\n            this.showAlert();\n          } else {\n            throw new Error(\"Please login in first\");\n          };\n        } catch (e) {\n          this.errMsg = e.response.data;\n          console.log(e);\n          console.log(e.response.data);\n          this.$store.state.user.loading = false;\n        };\n  \n      },\n  \n      cancle() {\n        jQuery(\"#Dashboard_send\").modal('hide');\n      },\n  \n      async getFriendsList() {\n        try {\n          const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n          if (userID) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/friend//listFriends/${userID}`);\n            console.log(response.data);\n            this.searchFriendList = response.data;\n            this.$store.state.user.friendList = response.data;\n            this.friendsList = this.$store.state.user.friendList;\n  \n            // console.log(\"friendsList :\", this.friendsList);\n            this.$store.state.user.loading = false;\n          } else {\n  \n          };\n        } catch (e) {\n          console.log(e.response.data);\n          this.$store.state.user.loading = false;\n        };\n      },\n  \n      async showAlert() {\n        jQuery(\".send_card_alert\").fadeIn();\n        setTimeout(() => {\n          jQuery(\".send_card_alert\").fadeOut();\n        }, 3500);\n  \n      },\n  \n    },\n  \n    created: function() {\n      this.$store.state.user.isLogin = true;\n      // this.cardsType = this.$store.getters.getAllCardTypeFromState;\n      // console.log(\"cards type:\",cardsType);\n    },\n  \n    mounted() {\n      try {\n        this.$store.state.user.loading = true;\n        axios.get(\"/card/card\")\n          .then(res => {\n            console.log(\"get all cards types\", res.data);\n            // this.setAllCardType(res.data);\n            this.$store.state.card.sendCardTypes = res.data;\n            this.cardsType = this.$store.state.card.sendCardTypes;\n            this.$store.state.user.loading = false;\n  \n          })\n          .catch(error => {\n            console.log(error);\n          });\n      } catch (e) {\n        console.log(e.response.data);\n        this.$store.state.user.loading = false;\n      };\n      this.getFriendsList();\n  \n    },\n  \n  \n  };\n</script>\n\n<style scoped>\n  @import '../assets/css/font-awesome.min.css';\n  @import '../assets/css/simple-line-icons.css';\n  body {\n    font-family: \"Open Sans\", serif;\n    padding-top: 54px;\n    color: #868e96;\n  }\n  \n  .send_card_alert {\n    margin: auto;\n    z-index: 99;\n    text-align: center;\n    width: 25rem;\n    background: #ffc9aa;\n    border-radius: 5px;\n    height: 5rem;\n    position: fixed;\n    top: 0px;\n    left: 0px;\n    bottom: 0px;\n    right: 0px;\n  }\n  \n  .send_card_alert p {\n    padding: 0;\n    text-align: center;\n    margin-top: 1rem;\n    padding-top: 1em;\n    line-height: 2em;\n    display: block;\n  }\n  \n  .card_cont {\n    /* background:#dcdcdc; */\n    display: block;\n    width: 220px;\n    ;\n    padding: 0;\n    margin: 0px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    float: left;\n  }\n  \n  .row {\n    padding: 0;\n    margin: 0;\n    margin-left: 20px;\n    padding-bottom: 50px;\n    margin-bottom: 200px;\n  }\n  \n  .card_img {\n    width: 220px;\n    margin: 10px 25px;\n    background: #dcdcdc;\n    height: 320px;\n    border-radius: 5px;\n  }\n  \n  .promise_msg {\n    word-wrap: normal;\n    width: 210px;\n    height: 110px;\n    overflow: hidden;\n    z-index: 999;\n    position: relative;\n    color: #fff;\n    font-size: 0.9em;\n    margin: auto;\n    top: -250px;\n    text-align: left;\n    line-height: 1.5em;\n  }\n  \n  .promise_msg p {\n    font-size: 1em;\n  }\n  \n  .card_img:hover {\n    background: #3ac17e;\n    opacity: 0.9;\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .card_img_more {\n    width: 330px;\n    /* margin: 10px 25px; */\n    background: #3ac17e;\n    height: 500px;\n    border-radius: 5px;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .card_img_more:hover {\n    background: #3ac17e;\n    opacity: 0.9;\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  }\n  \n  .customize-icon-cont {\n    border: 4px dashed #fff;\n    width: 220px;\n    margin: 10px 25px;\n    background: rgba(0, 0, 0, 0.2);\n    height: 320px;\n    border-radius: 5px;\n    color: #fff;\n    color: #fff;\n  }\n  \n  .customize-icon-cont i {\n    font-size: 6em;\n    text-align: center;\n    position: relative;\n    top: 80px;\n  }\n  \n  .customize-icon {\n    opacity: 0.8;\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 180px;\n  }\n  \n  .card_cont img {\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 280px;\n  }\n  \n  .card_img_more img {\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 495px;\n  }\n  \n  .send_cards_container {\n    height: auto;\n    margin-top: 50px;\n    margin-left: 0rem;\n  }\n  \n  .title {\n    text-align: left;\n    font-size: 1.8em;\n    color: #fff;\n    margin-left: 50px;\n  }\n  \n  .subTitle {\n    color: #ddd;\n    font-size: 0.9em;\n    margin-left: 50px;\n    text-align: left;\n  }\n  \n  #nav_dashboard {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    background: #fff;\n    background: url(/img/bg1.2bf8b4c8.jpg) no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    min-height: 786px;\n    overflow-x: hidden;\n  }\n  \n  @media (min-width: 992px) {\n    /* #nav_dashboard {\n      padding-top: 0;\n      padding-left: 17rem;\n    } */\n    .send_cards_container {\n      height: auto;\n      margin-top: 0px;\n      margin-left: 0rem;\n    }\n  }\n  \n  h1 {\n    font-size: 6rem;\n    line-height: 5.5rem;\n  }\n  \n  h2 {\n    font-size: 3.5rem;\n  }\n  \n  .card_img h4 {\n    margin-top: 15px;\n    font-size: 0.9rem;\n  }\n  \n  .card_img p {\n    font-size: 0.7rem;\n  }\n  \n  .subheading {\n    font-weight: 500;\n    font-size: 1.35rem;\n  }\n  \n  li {\n    text-align: left;\n    font-size: 0.8rem;\n    margin: 5px;\n    padding: 2px;\n  }\n  \n  li:hover {\n    background: #aaa;\n    color: #000;\n    border-radius: 3px;\n  }\n  \n  .btn-cancle {\n    margin-top: 30px;\n  }\n  \n  @media (min-width: 768px) {\n    .send_cards_container {\n      width: auto;\n      height: auto;\n      margin-left: 0rem;\n      margin-top: 55px;\n    }\n    .body_cont {\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-left: 0rem;\n      /* min-height: 775px; */\n    }\n    .friend_float_div{\n      margin:0;\n      padding:0;\n\n    }\n  }\n  \n  @media (min-width: 768px) and (max-width: 992px) {\n    .modal_size_ipad {\n      max-width: 95%;\n    }\n  }\n  \n  @media (min-width: 992px) {\n    .body_cont {\n      /* width:90%; */\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-top: 0px !important;\n      padding-left: 17rem !important;\n      /* min-height: 775px; */\n    }\n  }\n  \n  .bg-primary {\n    background-color: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  i {\n    margin-left: 15px;\n    margin-right: 25px;\n  }\n  \n  .text-primary {\n    color: #000 !important;\n  }\n  \n  .js-scroll-trigger {\n    color: #ffffff !important;\n  }\n  \n  .profile-usertitle-name {\n    color: #eeeeee;\n  }\n  \n  .body_cont {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: block;\n    float: left;\n    display: table-cell;\n    /* min-height: 775px;  */\n  }\n  \n  .modal-dialog-centered {\n    overflow: hidden;\n  }\n  \n  .sender_cont_more img {\n    width: 90px;\n    margin-top: 25px;\n  }\n  \n  .content_more {\n    margin-top: 15px;\n  }\n  \n  .sender_cont {\n    width: 100%;\n    text-align: left;\n    margin-top: -90px;\n    padding: 0;\n    position: relative;\n  }\n  \n  .avatar {\n    position: relative;\n    top: 0px;\n    /* top: -10px; */\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    padding: 0;\n    margin-left: 10px;\n    float: left;\n  }\n  \n  .avatar img {\n    width: 40px;\n    height: 40px !important;\n    border-radius: 50% !important;\n  }\n  \n  .content {\n    width: 240px;\n    height: 80px;\n    font-size: 13px;\n    padding: 5px;\n    background: #dcdcdc;\n    border-radius: 5px;\n    color: #222;\n    margin-left: 8px;\n    display: inline-block;\n    word-wrap: normal;\n    line-height: 1.5em;\n    padding-top: 5px;\n    opacity: 0.7;\n    margin-left: 10px;\n    overflow: hidden;\n  }\n  \n  .message_more {\n    background: #eeeeee;\n    border-radius: 5px;\n    margin: 0px;\n    display: block;\n    text-align: left;\n    padding: 15px;\n    height: 100px;\n    font-size: 0.85em;\n    overflow: hidden;\n    margin-bottom: 20px;\n  }\n  \n  .btn-send {\n    width: 100%;\n  }\n  \n  .card_row {\n    width: 100%;\n  }\n  \n  .userName {\n    color: #fff;\n    font-size: 0.8em;\n    text-align: center;\n  }\n  \n  .content_more label {\n    text-align: left;\n    padding: 5px;\n    margin-left: 0px;\n  }\n  \n  .content_more {\n    text-align: left;\n  }\n  \n  .friend_list_cont {\n    width: 100%;\n    max-height: 400px;\n    display: blcok;\n    margin: 0;\n    padding: 0;\n  }\n  \n  \n  /* .friends {\n    position: relative;\n    background: rgba(0, 0, 0, 0.9);\n    height: 100%;\n    width: 240px;\n    color:#fff;\n    padding-top:10px;\n  } */\n  \n  .friend {\n    width: 100%;\n    float: left;\n    /* float:left; */\n    margin: 0;\n    padding: 10px;\n    height: 55px;\n    cursor: pointer;\n    border-bottom: 1px solid rgba(100, 100, 100, 0.3);\n  }\n  \n  .friend_float_div {\n    position: absolute;\n    float: left;\n    height: auto;\n    height: 265px;\n    overflow: scroll;\n    width: 343px;\n    /* padding:0; */\n    /* top:-2px; */\n    margin-top: 0px;\n    background: rgba(0, 0, 0, 0.9);\n    /* border-radius:0 0 5px 5px; */\n  }\n  \n  .friend_float_div::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n  \n  .friends_img {\n    width: 50px;\n    height: 50px;\n    display: block;\n    position: relative;\n    top: 0;\n    margin: 0px;\n    padding: 0;\n    float: left;\n    margin-left: 8px;\n  }\n  \n  .card_info {\n    font-size: 0.7rem;\n    color: #dcdcdc;\n    cursor: pointer;\n  }\n  \n  .card_info span {\n    margin: 0;\n    padding: 0;\n    margin-left: 5px;\n    padding-right: 15px;\n    font-weight: 800;\n  }\n  \n  .friends_img img {\n    width: 30px;\n    height: 30px;\n    margin: 5px;\n  }\n  \n  .friens_info {\n    display: block;\n    float: left;\n    height: 100%;\n    width: 165px;\n    color: white;\n    text-align: left;\n  }\n  \n  .friend:hover {\n    background: #444444;\n  }\n  \n  .msg {\n    font-size: 1em;\n  }\n  \n  @media (max-width:768px) {\n    #nav_dashboard {\n      padding-top: 40px;\n    }\n    .sender_cont_more {\n      float: left;\n      position: absolute;\n      top: 520px;\n      margin: 0 auto;\n      width: 325px;\n    }\n    .modal-content {\n      margin: 0;\n      padding: 0;\n      margin-top: 50px;\n      height: 1090px;\n    }\n    .modal-body {\n      height: 100% !important;\n    }\n    .card_img_more {\n      margin: auto;\n    }\n  }\n</style>\n"]}]}