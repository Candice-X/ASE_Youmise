{"remainingRequest":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/eslint-loader/index.js??ref--18-0!/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/router/index.js","dependencies":[{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/src/router/index.js","mtime":1524465414012},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/package.json","mtime":1524551041812},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/kuer/Documents/GitHub/ASE_Youmise/umise/node_modules/@babel/runtime/helpers/asyncToGenerator\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport HelloWorld from '@/components/HelloWorld';\nimport Navbar from '@/components/Navbar';\nimport Login from '@/components/Login';\nimport Signup from '@/components/Signup';\nimport Dashboard from '@/components/Dashboard';\nimport Mycard from '@/components/Mycard';\nimport Friends from '@/components/Friends';\nimport About from '@/components/About';\nimport Messages from '@/components/Messages';\nimport FriendsList from '@/components/FriendsList';\nimport Account from '@/components/Account';\nimport ResetPassword from '@/components/ResetPassword';\nimport store from '../store/store'; // import Meta from 'vue-meta';\n\nVue.use(Router); // Vue.use(Meta, {\n//   keyName: 'metaInfo', // the component option name that vue-meta looks for meta info on.\n//   attribute: 'data-vue-meta', // the attribute name vue-meta adds to the tags it observes\n// });\n// path:\"*\", redirect(/)\n\nvar authToLink = ['/', '/login', '/signup', '/dashboard', '/mycard', '/friends', '/about', '/messages'];\n\nvar loginGuard = function loginGuard(link) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(to, from, next) {\n        var authenticated;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                authenticated = store.state.user.authenticated;\n\n                if (link === '/mycard' || link === '/friends' || link === '/messages' || link === '/account' || link === '/dashboard') {\n                  if (authenticated !== 1) {\n                    try {\n                      next('/login');\n                    } catch (e) {}\n                  } else {\n                    next();\n                  }\n                } else {\n                  next();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nexport default new Router({\n  mode: 'history',\n  routes: [{\n    path: '/',\n    name: 'HelloWorld',\n    component: HelloWorld\n  }, {\n    path: '/login',\n    name: 'login',\n    component: Login,\n    beforeEnter: loginGuard('/')\n  }, {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    beforeEnter: loginGuard('/signup')\n  }, {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: Dashboard,\n    beforeEnter: loginGuard('/dashboard')\n  }, {\n    path: '/mycard',\n    name: 'mycard',\n    component: Mycard,\n    beforeEnter: loginGuard('/mycard')\n  }, {\n    path: '/friends',\n    name: 'friends',\n    component: Friends,\n    beforeEnter: loginGuard('/friends')\n  }, {\n    path: '/about',\n    name: 'about',\n    component: About,\n    beforeEnter: loginGuard('/about')\n  }, {\n    path: '/messages',\n    name: 'messages',\n    component: Messages,\n    beforeEnter: loginGuard('/messages')\n  }, {\n    path: '/account',\n    name: 'account',\n    component: Account,\n    beforeEnter: loginGuard('/account')\n  }, {\n    path: '/resetPassword',\n    name: 'resetPassword',\n    component: ResetPassword,\n    beforeEnter: loginGuard('/resetPassword')\n  }, {\n    path: '*',\n    redirect: '/'\n  }]\n});",{"version":3,"sources":["src/router/index.js"],"names":["Vue","Router","HelloWorld","Navbar","Login","Signup","Dashboard","Mycard","Friends","About","Messages","FriendsList","Account","ResetPassword","store","use","authToLink","loginGuard","to","from","next","authenticated","state","user","link","e","mode","routes","path","name","component","beforeEnter","redirect"],"mappings":"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","sourceRoot":"/Users/kuer/Documents/GitHub/ASE_Youmise/umise","sourcesContent":["import Vue from 'vue';\nimport Router from 'vue-router';\n\nimport HelloWorld from '@/components/HelloWorld';\nimport Navbar from '@/components/Navbar';\nimport Login from '@/components/Login';\nimport Signup from '@/components/Signup';\nimport Dashboard from '@/components/Dashboard';\nimport Mycard from '@/components/Mycard';\nimport Friends from '@/components/Friends';\nimport About from '@/components/About';\nimport Messages from '@/components/Messages';\nimport FriendsList from '@/components/FriendsList';\nimport Account from '@/components/Account';\nimport ResetPassword from '@/components/ResetPassword';\n\nimport store from '../store/store';\n// import Meta from 'vue-meta';\n\n\nVue.use(Router);\n// Vue.use(Meta, {\n//   keyName: 'metaInfo', // the component option name that vue-meta looks for meta info on.\n//   attribute: 'data-vue-meta', // the attribute name vue-meta adds to the tags it observes\n// });\n\n// path:\"*\", redirect(/)\nconst authToLink =['/', '/login', '/signup', '/dashboard', '/mycard', '/friends', '/about', '/messages'];\n\nconst loginGuard = link => async (to, from, next ) => {\n  let { authenticated } = store.state.user;\n  if(link ==='/mycard'|| link ==='/friends' || link==='/messages'|| link==='/account'|| link==='/dashboard'){\n      if(authenticated !==1){\n        try {\n          next('/login');\n         \n        }catch(e){}\n      }else{\n        next();\n      }\n  }else{\n    next();\n  }\n};\n\nexport default new Router({\n  mode: 'history',\n  routes: [{\n    path: '/',\n    name: 'HelloWorld',\n    component: HelloWorld,\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: Login,\n    beforeEnter: loginGuard('/'),\n  },\n  {\n    path: '/signup',\n    name: 'signup',\n    component: Signup,\n    beforeEnter: loginGuard('/signup'),\n  },\n  {\n    path: '/dashboard',\n    name: 'dashboard',\n    component: Dashboard,\n    beforeEnter: loginGuard('/dashboard'),\n  },\n  {\n    path: '/mycard',\n    name: 'mycard',\n    component: Mycard,\n    beforeEnter: loginGuard('/mycard'),\n  },\n  {\n    path: '/friends',\n    name: 'friends',\n    component: Friends,\n    beforeEnter: loginGuard('/friends'),\n  },\n  {\n    path: '/about',\n    name: 'about',\n    component: About,\n    beforeEnter: loginGuard('/about'),\n  },\n  {\n    path: '/messages',\n    name: 'messages',\n    component: Messages,\n    beforeEnter: loginGuard('/messages'),\n  },\n  {\n    path: '/account',\n    name: 'account',\n    component: Account,\n    beforeEnter: loginGuard('/account'),\n  },\n  {\n    path: '/resetPassword',\n    name: 'resetPassword',\n    component: ResetPassword,\n    beforeEnter: loginGuard('/resetPassword'),\n  },\n  {\n    path: '*',\n    redirect: '/',\n  },\n  ],\n});\n"]}]}