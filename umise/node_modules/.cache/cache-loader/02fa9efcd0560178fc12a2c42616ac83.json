{"remainingRequest":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/components/Messages.vue","dependencies":[{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/components/Messages.vue","mtime":1524442850000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/package.json","mtime":1524458335000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":1521602987000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/@babel/runtime/helpers/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      name: 'kuer',\n      isMessage: true,\n      // imgUrl:'',\n      messages: [],\n      friendRequests: []\n    };\n  },\n  methods: {\n    getAllMessages: function () {\n      var _getAllMessages = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var userID, response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.isMessage = true;\n                userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n                _context.prev = 2;\n\n                if (!userID) {\n                  _context.next = 13;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context.next = 7;\n                return axios.get(\"/message/message/sender/\".concat(userID));\n\n              case 7:\n                response = _context.sent;\n                // const response = await axios.get(`/record/record`);\n                // this.cards = response.data;\n                this.messages = response.data;\n                this.$store.state.user.loading = false;\n                console.log(response.data);\n                _context.next = 13;\n                break;\n\n              case 13:\n                ;\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](2);\n                this.$store.state.user.loading = false;\n                console.log(_context.t0.message.data);\n\n              case 20:\n                ;\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 16]]);\n      }));\n\n      return function getAllMessages() {\n        return _getAllMessages.apply(this, arguments);\n      };\n    }(),\n    getFriendsRequest: function () {\n      var _getFriendsRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.isMessage = false;\n                _context2.prev = 1;\n\n                if (!(this.$store.state.user.userID != null)) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context2.next = 6;\n                return axios.get(\"/friend/listFriendRequest/\".concat(this.$store.state.user.userID));\n\n              case 6:\n                response = _context2.sent;\n                this.friendRequests = response.data;\n                this.$store.state.user.loading = false;\n                _context2.next = 12;\n                break;\n\n              case 11:\n                throw new Error(\"You need to login first\");\n\n              case 12:\n                ;\n                _context2.next = 20;\n                break;\n\n              case 15:\n                _context2.prev = 15;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.log(_context2.t0);\n                this.$store.state.user.loading = false;\n                this.errorMsg = _context2.t0.response.data;\n\n              case 20:\n                ;\n\n              case 21:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 15]]);\n      }));\n\n      return function getFriendsRequest() {\n        return _getFriendsRequest.apply(this, arguments);\n      };\n    }(),\n    acceptRequest: function () {\n      var _acceptRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(requestId) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                console.log(\"userId: \", this.$store.state.user.userID);\n\n                if (!(this.$store.state.user.userID != null)) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context3.next = 6;\n                return axios.post(\"/friend/updateFriendRequest/\", {\n                  \"friendRequestId\": requestId,\n                  \"status\": \"APPROVED\"\n                });\n\n              case 6:\n                response = _context3.sent;\n                this.$store.state.user.loading = false;\n                _context3.next = 11;\n                break;\n\n              case 10:\n                throw new Error(\"You need to login first\");\n\n              case 11:\n                ; //refresh the request list\n\n                this.getFriendsRequest();\n                _context3.next = 19;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.$store.state.user.loading = false;\n                console.log(_context3.t0); // this.errorMsg = e.response.data;\n\n              case 19:\n                ;\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n\n      return function acceptRequest(_x) {\n        return _acceptRequest.apply(this, arguments);\n      };\n    }(),\n    rejectRequest: function () {\n      var _rejectRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(requestId) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                console.log(\"userId: \", this.$store.state.user.userID);\n\n                if (!(this.$store.state.user.userID != null)) {\n                  _context4.next = 10;\n                  break;\n                }\n\n                this.$store.state.user.loading = true;\n                _context4.next = 6;\n                return axios.post(\"/friend/updateFriendRequest/\", {\n                  \"friendRequestId\": requestId,\n                  \"status\": \"REJECTED\"\n                });\n\n              case 6:\n                response = _context4.sent;\n                this.$store.state.user.loading = false;\n                _context4.next = 11;\n                break;\n\n              case 10:\n                throw new Error(\"You need to login first\");\n\n              case 11:\n                ; //refresh the request list\n\n                this.getFriendsRequest();\n                _context4.next = 19;\n                break;\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n                this.$store.state.user.loading = false; // this.errorMsg = e.response.data;\n\n              case 19:\n                ;\n\n              case 20:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 15]]);\n      }));\n\n      return function rejectRequest(_x2) {\n        return _rejectRequest.apply(this, arguments);\n      };\n    }()\n  },\n  created: function created() {\n    this.$store.state.isLogin = true; // this.imgUrl = this.$store.state.card.img1;\n\n    this.getFriendsRequest();\n  }\n};",{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AAEA;wBAEA;;YAEA;iBACA;AACA;gBACA;sBACA,AACA;AANA;AAQA;;AAEA;AADA;;;;;;;;iCAEA;+EACA,AACA;;;qBACA;;;;;iDACA;;mEACA;;;;AACA;AACA;yCACA;iDACA;qCAEA,AAEA;;;;;AACA,AACA;;;;;;;iDACA;gDACA;;;AACA,AAEA;;;;;;;;;;;;;;AACA;;;;;;;;;iCACA,AAEA;;;uDACA;;;;;iDACA;;4FACA;;;;+CACA;iDACA,AACA;;;;;gCACA;;;AAEA,AACA;;;;;;;wBACA;iDACA;sDACA;;;AACA,AAEA;;;;;;;;;;;;;;;;;gDACA,AACA;;;;;;;+DACA;;uDACA;;;;;iDACA;;;qCAEA;4BACA,AAEA;AAJA;;;;iDAKA,AACA;;;;;gCACA;;;AACA,kBACA;;qBAEA,AACA;;;;;;;iDACA;wBACA,mBACA;;;AACA,AAEA;;;;;;;;;;;;;;;;;gDACA,AACA;;;;;;;+DACA;;uDACA;;;;;iDACA;;;qCAEA;4BACA,AAEA;AAJA;;;;iDAKA,AACA;;;;;gCACA;;;AACA,kBACA;;qBAEA,AACA;;;;;;;wBACA;iDACA,OACA;;;AACA,AACA,AAEA;;;;;;;;;;;;;;;8BACA;gCACA,MACA;;SACA;AACA;AA3GA","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id='message'>\n    <!--- body -->\n    <div id=\"send_cards\" class=\"body_cont\">\n      <div class=\"send_cards_container\">\n        <h4 class=\"title\">Messages</h4>\n        <!-- <h4 class=\"subTitle\">Messages from your friends</h4> -->\n        <br />\n        <button class=\"btn btn-primary btn-outline-success\" :class=\"{active: !isMessage}\" @click=\"getFriendsRequest\">Friends Request</button>\n        <button class=\"btn btn-primary btn-outline-success \" :class=\"{active: isMessage}\" @click=\"getAllMessages\"> Messages</button>\n  \n        <div class=\"row\" v-if=\"isMessage\">\n          <!-- if empty -->\n          <div class=\"empty_msg\" style=\"\" v-if=\"messages.length===0\">\n            You don't have any Messages right now\n            <!-- <button class=\"btn btn-secondary btn-primary\"> Add Friends </button> -->\n          </div>\n          <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"col-lg-4 col-md-4 col-sm-6 card_cont\">\n            <div class=\"card_img\">\n              <div class=\"sender_cont\">\n                <div class='avatar' style=\"position:relative; top:10px; float:left;\">\n                  <img src=\"../assets/img/girl.png\" />\n                </div>\n                <div class=\"content\" style=\"width:190px;\">\n                  <h4>{{ message.title }} </h4>\n                  <!-- <p class=\"sub_title\" >{{message.cardTitle}}</p> -->\n                  <p class=\"sub_title\">{{ message.cardContent }} </p>\n                  <p class=\"\">Content: <br/>{{message.msgContent}}</p>\n                </div>\n              </div>\n              <div v-if=\"message.status==='SENT'\">\n                <button class=\"btn btn-primary btn-success col-sm-6\" @click=\"acceptRequest(message.friendRequestId)\">Accept</button>\n                <button class=\"btn btn-primary btn-secondary col-sm-4\" @click=\"rejectRequest(message.friendRequestId)\">Decline</button>\n              </div>\n              <div v-else>\n                <!-- <button class=\"btn btn-secondary btn-primary col-sm-10\" style=\"font-size:0.8em;\" disabled >You have <strong>{{message.status}} </strong> </button> -->\n              </div>\n            </div> \n            <!-- button --> \n          </div>  \n        </div>\n        <!-- end of row -->\n  \n  \n        <div class=\"row\" v-if=\"!isMessage\">\n          <!-- if empty -->\n          <div class=\"empty_msg\" style=\"\" v-if=\"friendRequests.length===0\">\n            You don't have any Friend Request right now\n            <!-- <button class=\"btn btn-secondary btn-primary\"> Add Friends </button> -->\n          </div>\n          <div v-for=\"(request, index) in friendRequests\" :key=\"index\" class=\"col-xl-3 col-lg-4 col-md-4 col-sm-6 card_cont\">\n            <div class=\"card_img\">\n              <div class=\"sender_cont\">\n                <div class='avatar'>\n                  <img src=\"../assets/img/girl.png\" />\n                </div>\n                <div class=\"content\">\n                  <h4>{{ request.senderUsername }} send a friend request </h4>\n                  <p class=\"sub_title\">{{request.createdAt.substring(0,10)}}</p>\n                  <p class=\"sub_title\"> {{ request.senderUsername }} want to add you as a new friend</p>\n                  <p class=\"\">Status: {{request.status}}</p>\n                </div>\n              </div>\n              <div v-if=\"request.status==='SENT'\">\n                <button class=\"btn btn-primary btn-success col-sm-6\" @click=\"acceptRequest(request.friendRequestId)\">Accept</button>\n                <button class=\"btn btn-primary btn-secondary col-sm-4\" @click=\"rejectRequest(request.friendRequestId)\">Decline</button>\n              </div>\n              <div v-else>\n                <button class=\"btn btn-secondary btn-primary col-sm-10\" style=\"font-size:0.8em;\" disabled>You have <strong>{{request.status}} </strong> </button>\n              </div>\n            </div> \n            <!-- button -->\n  \n          </div>  \n        </div>\n        <!-- end of row -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import axios from \"axios\";\n  \n  export default {\n    data() {\n      return {\n        name: 'kuer',\n        isMessage: true,\n        // imgUrl:'',\n        messages: [],\n        friendRequests: [],\n      };\n    },\n  \n    methods: {\n      async getAllMessages() {\n        this.isMessage = true;\n        const userID = this.$store.state.user.userID || localStorage.getItem(\"userID\");\n        try {\n          if (userID) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/message/message/sender/${userID}`);\n            // const response = await axios.get(`/record/record`);\n            // this.cards = response.data;\n            this.messages = response.data;\n            this.$store.state.user.loading = false;\n            console.log(response.data);\n  \n          } else {\n  \n          };\n        } catch (e) {\n          this.$store.state.user.loading = false;\n          console.log(e.message.data);\n        };\n      },\n  \n      async getFriendsRequest() {\n        this.isMessage = false;\n        try {\n  \n          if (this.$store.state.user.userID != null) {\n            this.$store.state.user.loading = true;\n            const response = await axios.get(`/friend/listFriendRequest/${this.$store.state.user.userID}`);\n            this.friendRequests = response.data;\n            this.$store.state.user.loading = false;\n          } else {\n            throw new Error(\"You need to login first\");\n          };\n  \n        } catch (e) {\n          console.log(e);\n          this.$store.state.user.loading = false;\n          this.errorMsg = e.response.data;\n        };\n      },\n  \n      async acceptRequest(requestId) {\n        try {\n          console.log(\"userId: \", this.$store.state.user.userID);\n          if (this.$store.state.user.userID != null) {\n            this.$store.state.user.loading = true;\n            const response = await axios.post(\"/friend/updateFriendRequest/\", {\n              \"friendRequestId\": requestId,\n              \"status\": \"APPROVED\"\n            });\n  \n            this.$store.state.user.loading = false;\n          } else {\n            throw new Error(\"You need to login first\");\n          };\n          //refresh the request list\n          this.getFriendsRequest();\n  \n        } catch (e) {\n          this.$store.state.user.loading = false;\n          console.log(e);\n          // this.errorMsg = e.response.data;\n        };\n      },\n  \n      async rejectRequest(requestId) {\n        try {\n          console.log(\"userId: \", this.$store.state.user.userID);\n          if (this.$store.state.user.userID != null) {\n            this.$store.state.user.loading = true;\n            const response = await axios.post(\"/friend/updateFriendRequest/\", {\n              \"friendRequestId\": requestId,\n              \"status\": \"REJECTED\"\n            });\n  \n            this.$store.state.user.loading = false;\n          } else {\n            throw new Error(\"You need to login first\");\n          };\n          //refresh the request list\n          this.getFriendsRequest();\n  \n        } catch (e) {\n          console.log(e);\n          this.$store.state.user.loading = false;\n          // this.errorMsg = e.response.data;\n        };\n      },\n    },\n  \n    created: function() {\n      this.$store.state.isLogin = true;\n      // this.imgUrl = this.$store.state.card.img1;\n      this.getFriendsRequest();\n    },\n  };\n</script>\n\n<style scoped>\n  @import '../assets/css/font-awesome.min.css';\n  @import '../assets/css/simple-line-icons.css';\n  body {\n    font-family: \"Open Sans\", serif;\n    padding-top: 54px;\n    color: #868e96;\n  }\n  \n  .empty_msg {\n    margin: auto;\n    text-align: center;\n    margin-top: 10em;\n    color: white;\n    font-size: 1rem;\n  }\n  \n  .send_cards_container button {\n    color: #ffffff;\n    margin-left: 15px;\n  }\n  \n  .sender_cont {\n    width: 100%;\n    text-align: left;\n    margin-top: 0;\n    padding: 10px;\n  }\n  \n  .avatar {\n    position: relative;\n    top: -75px;\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    padding: 0;\n    margin-left: 10px;\n  }\n  \n  .avatar img {\n    width: 40px;\n    height: 40px !important;\n    border-radius: 50% !important;\n  }\n  \n  .content {\n    width: 200px;\n    margin-left: 8px;\n    display: inline-block;\n    line-height: 1em;\n  }\n  \n  .card_cont {\n    /* background:#dcdcdc; */\n    display: block;\n    width: auto;\n    padding: 0;\n    margin: 0px;\n    margin-top: 15px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n  }\n  \n  .row {\n    width: auto;\n    padding: 0;\n    margin: 0;\n    margin-left: 20px;\n    padding-bottom: 50px;\n    margin-bottom: 200px;\n  }\n  \n  .card_img {\n    width: 280px;\n    margin: 0px 25px;\n    background: #dcdcdc;\n    height: 220px;\n    border-radius: 5px;\n  }\n  \n  \n  /* .card_img:hover {\n    background: #3ac17e;\n    opacity: 0.9;\n    cursor: pointer;\n    border: 2px dashed #fff;\n    color: #fff;\n  } */\n  \n  .customize-icon-cont {\n    border: 4px dashed #fff;\n    width: 280px;\n    margin: 10px 25px;\n    background: rgba(0, 0, 0, 0.2);\n    height: 320px;\n    border-radius: 5px;\n    color: #fff;\n    color: #fff;\n  }\n  \n  .customize-icon-cont i {\n    font-size: 6em;\n    text-align: center;\n    position: relative;\n    top: 80px;\n  }\n  \n  .customize-icon {\n    opacity: 0.8;\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 180px;\n  }\n  \n  .card_cont img {\n    border-radius: 5px 5px 0 0;\n    width: 100%;\n    height: 260px;\n  }\n  \n  .send_cards_container {\n    height: auto;\n    margin-top: 50px;\n    margin-left: 0rem;\n  }\n  \n  .title {\n    text-align: left;\n    font-size: 1.8em;\n    color: #fff;\n    margin-left: 50px;\n  }\n  \n  .subTitle {\n    color: #ddd;\n    font-size: 0.9em;\n    margin-left: 50px;\n    text-align: left;\n  }\n  \n  #message {\n    width: 100%;\n    height: 100%;\n    position: relative;\n    display: block;\n    background: #f0f3f6;\n    background: url(\"../assets/img/bg1.jpg\") no-repeat center center fixed;\n    -webkit-background-size: cover;\n    -moz-background-size: cover;\n    -o-background-size: cover;\n    background-size: cover;\n    height: 100vh;\n    min-height: 786px;\n    overflow-x: hidden;\n  }\n  \n  @media (min-width: 992px) {\n    /* #nav_dashboard {\n      padding-top: 0;\n      padding-left: 17rem;\n    } */\n    .send_cards_container {\n      height: auto;\n      margin-top: 0px;\n      margin-left: 0rem;\n    }\n  }\n  \n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    font-weight: 700;\n  }\n  \n  h1 {\n    font-size: 6rem;\n    line-height: 5.5rem;\n  }\n  \n  h2 {\n    font-size: 3.5rem;\n  }\n  \n  .card_img h4 {\n    margin-top: 8px;\n    font-size: 0.9rem;\n  }\n  \n  .card_img p {\n    font-size: 0.7rem;\n  }\n  \n  .subheading {\n    font-weight: 500;\n    font-size: 1.35rem;\n  }\n  \n  li {\n    text-align: left;\n    font-size: 0.8rem;\n    margin: 5px;\n    padding: 2px;\n  }\n  \n  li:hover {\n    background: #aaa;\n    color: #000;\n    border-radius: 3px;\n  }\n  \n  li a {\n    color: #ffffff;\n  }\n  \n  li:hover,\n  a:hover {\n    color: #fff !important;\n  }\n  \n  .nav_active {\n    background: #3ac17e !important;\n    color: #ffffff;\n    border-radius: 3px;\n  }\n  \n  li:active {\n    background: #3ac17e;\n    color: #ffffff;\n    border-radius: 3px;\n  }\n  \n  #sideNav .navbar-nav .nav-item .nav-link {\n    font-weight: 600;\n    text-transform: uppercase;\n  }\n  \n  @media (min-width: 992px) {\n    #sideNav {\n      text-align: center;\n      position: fixed;\n      top: 0;\n      left: 0;\n      display: flex;\n      flex-direction: column;\n      width: 17rem;\n      height: 100vh;\n    }\n    #sideNav .navbar-brand {\n      display: flex;\n      margin: auto auto 0;\n      padding: 0.5rem;\n    }\n    #sideNav .navbar-brand .img-profile {\n      max-width: 6rem;\n      max-height: 10rem;\n      border: 0.1rem solid #3ac17e;\n    }\n    #sideNav .navbar-collapse {\n      display: flex;\n      align-items: flex-start;\n      flex-grow: 0;\n      width: 100%;\n      margin-bottom: auto;\n    }\n    #sideNav .navbar-collapse .navbar-nav {\n      flex-direction: column;\n      width: 100%;\n    }\n    #sideNav .navbar-collapse .navbar-nav .nav-item {\n      display: block;\n    }\n    #sideNav .navbar-collapse .navbar-nav .nav-item .nav-link {\n      display: block;\n    }\n  }\n  \n  section.resume-section {\n    border-bottom: 1px solid #dee2e6;\n    padding-top: 5rem !important;\n    padding-bottom: 5rem !important;\n  }\n  \n  section.resume-section .resume-item .resume-date {\n    min-width: none;\n  }\n  \n  @media (min-width: 768px) {\n    section.resume-section {\n      min-height: 100vh;\n    }\n    section.resume-section .resume-item .resume-date {\n      min-width: 18rem;\n    }\n    .send_cards_container {\n      width: auto;\n      height: auto;\n      margin-left: 0rem;\n      margin-top: 55px;\n    }\n    .body_cont {\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-left: 0rem;\n      /* min-height: 775px; */\n    }\n  }\n  \n  @media (min-width: 992px) {\n    section.resume-section {\n      padding-top: 3rem !important;\n      padding-bottom: 3rem !important;\n    }\n    .body_cont {\n      height: 100%;\n      position: relative;\n      display: block;\n      margin-top: 0px !important;\n      padding-left: 17rem !important;\n      /* min-height: 775px; */\n    }\n  }\n  \n  .bg-primary {\n    background-color: rgba(0, 0, 0, 0.7) !important;\n  }\n  \n  i {\n    margin-left: 15px;\n    margin-right: 25px;\n  }\n  \n  .text-primary {\n    color: #000 !important;\n  }\n  \n  .js-scroll-trigger {\n    color: #ffffff !important;\n  }\n  \n  .profile-usertitle-name {\n    color: #eeeeee;\n  }\n  \n  .body_cont {\n    height: 100%;\n    width: 100%;\n    position: relative;\n    display: block;\n    float: left;\n    /* min-height: 775px;  */\n  }\n  \n  .time {\n    float: right;\n    height: 20px;\n    font-size: 10px;\n    margin-top: -18px;\n    color: #555;\n  }\n  \n  @media (max-width:768px) {\n    #message {\n      padding-top: 55px;\n    }\n  }\n</style>\n"]}]}