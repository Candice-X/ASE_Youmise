{"remainingRequest":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/components/Signup.vue","dependencies":[{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/src/components/Signup.vue","mtime":1524434859000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/package.json","mtime":1524458335000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/cache-loader/dist/cjs.js","mtime":1521602987000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/Dorothy/dev/umise-3env/ASE_Youmise/umise/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport { required, email, minLength, sameAs } from 'vuelidate/lib/validators';\nexport default {\n  components: {\n    Navbar: Navbar\n  },\n  data: function data() {\n    return {\n      user: {\n        username: '',\n        email: '',\n        password: '',\n        confirmationCode: '',\n        repeatPassword: ''\n      },\n      submittedValue: false,\n      errorMsg: '',\n      validateMsg: ''\n    };\n  },\n  validations: {\n    user: {\n      email: {\n        email: email,\n        required: required\n      },\n      username: {\n        required: required\n      },\n      password: {\n        required: required,\n        minLength: minLength(8)\n      },\n      repeatPassword: {\n        sameAs: sameAs('password')\n      },\n      confirmationCode: {\n        required: required,\n        minLength: minLength(6)\n      }\n    }\n  },\n  methods: {\n    submitSignup: function submitSignup() {\n      var _this = this;\n\n      //if the input is validated\n      if (this.user.password.length < 8) {\n        this.errorMsg = \"password has to be more than 8 characters\";\n        return;\n      }\n\n      if (this.user.username.length != 0 && this.user.email.length != 0 && this.user.password.length >= 8) {\n        // request server for sign up\n        this.errorMsg = \"\";\n        axios.post(\"/user/signup\", this.user).then(function (res) {\n          console.log(\"response !!!!!\", res); // const data = res.data;\n\n          console.log(res.data); // console.log(user);   \n\n          _this.submittedValue = true;\n        }).catch(function (error) {\n          if (typeof error.response === 'undefined') {\n            return;\n          } else {\n            if (error.response) {\n              //请求已发出，但服务器使用状态代码进行响应\n              //落在2xx的范围之外\n              _this.errorMsg = error.response.data;\n              console.log(\"data\", error.response.data);\n              console.log(\"status\", error.response.status);\n              console.log(\"header\", error.response.headers);\n            } else {\n              //在设置触发错误的请求时发生了错误\n              console.log('Error', error.message);\n            }\n          }\n        });\n      } else {\n        this.errorMsg = \" Fileds should not be empty\";\n      }\n    },\n    validateCode: function validateCode() {\n      var _this2 = this;\n\n      this.validateMsg = '';\n\n      if (this.user.confirmationCode.length != 6) {\n        this.validateMsg = \"validation code length should be 6 digitals\";\n        return false;\n      } else {\n        this.validateMsg = '';\n        axios.post(\"/user/verification\", this.user).then(function (res) {\n          console.log(\"response verification!\", res); // const data = res.data;\n\n          console.log(res.data);\n          console.log(\"success sign up, please login\");\n\n          _this2.$router.push({\n            path: '/login'\n          }); // console.log(user);    \n\n        }).catch(function (error) {\n          if (typeof error.response === 'undefined') {\n            return;\n          } else {\n            if (error.response) {\n              //请求已发出，但服务器使用状态代码进行响应\n              //落在2xx的范围之外\n              _this2.validateMsg = error.response.data;\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            } else {\n              //在设置触发错误的请求时发生了错误\n              console.log('Error', error.message);\n            }\n          }\n        });\n      }\n    },\n    resendValidationCode: function resendValidationCode() {\n      var _this3 = this;\n\n      this.validateMsg = 'Resend the verification code successfully';\n      axios.post(\"/user/resendConfirmation\", {\n        \"email\": this.user.email\n      }).then(function (res) {\n        console.log(\"response verification!\", res); // const data = res.data;\n\n        console.log(res.data);\n        console.log(\"resend verification code\");\n      }).catch(function (error) {\n        if (typeof error.response === 'undefined') {\n          return;\n        } else {\n          if (error.response) {\n            //请求已发出，但服务器使用状态代码进行响应\n            //落在2xx的范围之外\n            _this3.validateMsg = error.response.data;\n          } else {\n            //在设置触发错误的请求时发生了错误\n            console.log('Error', error.message);\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AAEA;;AAGA,AACA;AAFA;wBAGA;;;kBAGA;eACA;kBACA;0BACA;wBACA,AACA;AANA;sBAOA;gBACA;mBACA,AACA;AAXA;AAYA;;;;AAIA;AACA,AACA;AAHA;;AAKA,AACA;AAFA;;AAIA;6BACA,AACA;AAHA;;uBAKA,AACA;AAFA;;AAIA;6BACA,AACA,AAEA,AACA;AANA;AAfA;AADA;;;AAwBA;;AACA;yCACA;wBACA;AACA;AACA;;2GACA;AACA;wBAEA;wCACA;wCAEA,MACA;;0BACA,MAHA,CAIA;;iCACA;AACA,kCACA;qDACA;AACA;iBACA;gCACA;AACA;AACA;8CAEA;iDACA;mDACA;mDAEA;mBACA;AACA;yCACA;AACA;AACA;AACA;aACA;wBACA;AACA;AAEA;;AACA;;yBACA;;kDACA;2BACA;eACA;aACA;2BACA;8CACA;gDAEA,MACA;;0BACA;sBAEA;;;kBAEA;aAPA,CAQA;;AACA,kCACA;qDACA;AACA;iBACA;gCACA;AACA;AACA;kDACA;yCACA;yCACA;yCACA;mBACA;AACA;yCACA;AACA;AACA;AACA;AACA;AAEA;;AACA;;yBACA;;2BACA;6BACA;8CACA,MACA;;wBACA;oBACA;AACA,gCACA;mDACA;AACA;eACA;8BACA;AACA;AACA;gDACA;iBACA;AACA;uCACA;AACA;AACA;AACA;AAEA,AACA;AA1GA;AAzCA","sourceRoot":"src/components","sourcesContent":["<template>\n<body class=\"bg\">\n  <Navbar></Navbar>\n  <div class=\"form-signin\">\n      <div class=\"text-center mb-4\">\n        <img class=\"mb-4\" src=\"../assets/img/Logo.png\" alt=\"\" height=\"72\" width=\"72\">\n        <h1 class=\"h3 mb-3 font-weight-normal\" style=\"color:#fff;\">Umise - Sign Up</h1>\n       </div>\n      <!--- This is the sign up div -->\n      <div id=\"signup_div\" v-show = '!submittedValue' >\n        <div class=\"form-label-group\" :class=\"{ invalid: $v.user.username.$error }\">\n          <input id=\"inputUserName\" class=\"form-control\" placeholder=\"UserName\"\n          @blur=\"$v.user.username.$touch()\" v-model =\"user.username\">\n          <label for=\"inputUserName\">User Name</label>\n        </div>\n        <!-- <p v-if=\"!$v.user.username.required\" >Username is required</p> -->\n\n        <div class=\"form-label-group\" :class=\"{ invalid: $v.user.email.$error }\">\n          <input  id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\"\n          @blur=\"$v.user.email.$touch()\" v-model =\"user.email\">\n          <label for=\"inputEmail\">Email address</label>\n        </div>\n        <!-- <p v-if=\"!$v.user.email.required\" >Email should not be empty</p> -->\n        <!-- <p v-if=\"!$v.user.email.email\" >Please provide a valid email address</p> -->\n        \n        <div class=\"form-label-group\" :class=\"{ invalid: $v.user.password.$error }\">\n          <input id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" \n          @blur=\"$v.user.password.$touch()\" type=\"password\" v-model=\"user.password\">\n          <label for=\"inputPassword\">Password</label>\n        </div>\n        <!-- <p v-if=\"!$v.user.password.required\" >Password should at lesst have 8 character with letters and numbers </p> -->\n        \n         <div class=\"form-label-group\" :class=\"{ invalid: $v.user.repeatPassword.$error }\">\n          <input id=\"inputRepeatPassword\" class=\"form-control\" placeholder=\"Repeat Password\" \n          @blur=\"$v.user.repeatPassword.$touch()\" type=\"password\" v-model=\"user.repeatPassword\">\n          <label for=\"inputRepeatPassword\">Repeat Password</label>\n        </div>\n        <!-- <p v-if=\"!$v.user.repeatPassword.required\" >Password are not not the same </p> -->\n\n\n\n        <label>{{ errorMsg }}</label>\n        <button class=\"btn btn-lg btn-success btn-block\" \n        :disabled=\"$v.user.username.$invalid || $v.user.email.$invalid || $v.user.password.$invalid \n        || $v.user.repeatPassword.$invalid\" v-on:click= \"submitSignup\"  name = 'sign_up' >Sign Up</button>\n      </div>\n   \n      <!-- This is the validation code div   -->\n      <transition name=\"fade\">\n        <div id=\"validate_div\"  v-if = \"submittedValue\">\n        <label class=\"message\"> We have send the validation code to the Email : {{ user.email }}</label>\n      <div class=\"form-label-group\">\n\n        <input id=\"validateCode\" class=\"form-control\" placeholder=\"UserName\" autofocus=\"\" type=\"\"\n        @blur =\"$v.user.confirmationCode.$touch()\" v-model =\"user.confirmationCode\" >\n        \n      \n\n        <label for=\"validateCode\">Validate Code</label>\n         <!-- <p v-if=\"!$v.confirmationCode.required\" >Confirmation Code should be 6 numbers </p> -->\n      </div>\n\n      <label>{{validateMsg}}</label>\n      <button class=\"btn btn-lg btn-success btn-block\" :disabled=\"$v.user.confirmationCode.$invalid\"  \n      @click=\"validateCode\" >Validate Email </button>\n      \n      <button class =\"btn  btn-secondary btn-block\" style=\"margin-top:20px;\" @click=\"resendValidationCode\" > \n        Resend Verification Code</button>\n      </div>\n      </transition>\n      <!-- <p class=\"mt-5 mb-3 text-muted text-center\">Don't have a account,<router-link to=\"/signup\"> Sign up</router-link></p> -->\n    </div>\n</body>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport { required, email, minLength, sameAs } from 'vuelidate/lib/validators';\n\nexport default {\n  components: {\n    Navbar,\n  },\n  data() {\n    return {\n      user: {\n        username:'',\n        email: '',\n        password:'',\n        confirmationCode:'',\n        repeatPassword:'',  \n      },\n      submittedValue: false,\n      errorMsg:'',\n      validateMsg:'',\n    };\n  },\n  validations: {\n    user: {\n      email:{\n      email,\n      required,\n    },\n    username:{\n      required,\n    },\n    password: {\n      required,\n      minLength:minLength(8),\n    },\n    repeatPassword:{\n      sameAs: sameAs('password'),\n    },\n    confirmationCode: {\n      required,\n      minLength: minLength(6),\n    }\n  },\n   \n  },\n  methods: {\n    submitSignup() {\n        //if the input is validated\n      if(this.user.password.length<8){\n        this.errorMsg =\"password has to be more than 8 characters\";\n        return;\n      }\n      if(this.user.username.length!=0 && this.user.email.length!=0 && this.user.password.length>=8){\n      // request server for sign up\n       this.errorMsg =\"\";\n\n        axios.post(\"/user/signup\",this.user)\n        .then(res => {       \n          console.log(\"response !!!!!\",res);\n          // const data = res.data;\n          console.log(res.data);\n          // console.log(user);   \n          this.submittedValue = true; \n        })\n        .catch(error => {\n        if(typeof error.response ==='undefined'){\n          return;\n        }else{\n            if(error.response){\n            //请求已发出，但服务器使用状态代码进行响应\n            //落在2xx的范围之外\n            this.errorMsg = error.response.data;\n            \n            console.log(\"data\",error.response.data);\n            console.log(\"status\",error.response.status);\n            console.log(\"header\",error.response.headers);\n\n          } else {\n            //在设置触发错误的请求时发生了错误\n            console.log('Error',error.message);\n          }\n        }\n      });\n      }else{\n        this.errorMsg =\" Fileds should not be empty\";\n      }\n    },\n\n    validateCode() {\n      this.validateMsg ='';\n      if(this.user.confirmationCode.length !=6){\n         this.validateMsg = \"validation code length should be 6 digitals\";\n         return false;\n      }else{\n        this.validateMsg ='';\n          axios.post(\"/user/verification\",this.user)\n          .then(res=>{  \n            console.log(\"response verification!\",res);\n            // const data = res.data;\n            console.log(res.data);\n            console.log(\"success sign up, please login\");\n\n            this.$router.push({path:'/login'});\n              \n            // console.log(user);    \n          })\n          .catch(error => {\n          if(typeof error.response ==='undefined'){\n            return;\n          }else{\n              if(error.response){\n              //请求已发出，但服务器使用状态代码进行响应\n              //落在2xx的范围之外\n              this.validateMsg = error.response.data;\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            } else {\n              //在设置触发错误的请求时发生了错误\n              console.log('Error',error.message);\n            }\n          }\n        });\n      }\n    },\n\n    resendValidationCode() {\n        this.validateMsg ='Resend the verification code successfully';\n          axios.post(\"/user/resendConfirmation\",{ \"email\":this.user.email })\n          .then(res=>{  \n            console.log(\"response verification!\",res);\n            // const data = res.data;\n            console.log(res.data);\n            console.log(\"resend verification code\");\n          })\n          .catch(error => {\n          if(typeof error.response ==='undefined'){\n            return;\n          }else{\n              if(error.response){\n              //请求已发出，但服务器使用状态代码进行响应\n              //落在2xx的范围之外\n              this.validateMsg = error.response.data;\n            } else {\n              //在设置触发错误的请求时发生了错误\n              console.log('Error',error.message);\n            }\n          }\n        });    \n    }\n\n  },\n};\n</script>\n\n<style scoped>\n:root,\nbody {\n  --input-padding-x: 0.75rem;\n  --input-padding-y: 0.75rem;\n}\n\nbody {\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: flex;\n  -ms-flex-align: center;\n  -ms-flex-pack: center;\n  -webkit-box-align: center;\n  align-items: center;\n  -webkit-box-pack: center;\n  justify-content: center;\n  background-color: #f5f5f5;\n  width: 100%;\n  height: 100vh;\n  min-height: 775px;\n  padding-top: 0;\n  /* margin-top:-60px; */\n  padding-bottom: 0;\n  background-image: url(\"../assets/img/bg2.jpg\");\n  background-size: cover;\n  color: #eee;\n}\n\n.form-signin {\n  width: 100%;\n  max-width: 420px;\n  padding: 15px;\n  margin: 0 auto;\n}\n\n.form-label-group {\n  position: relative;\n  margin-bottom: 1rem;\n}\n\n.form-label-group > input,\n.form-label-group > label {\n  padding: var(--input-padding-y) var(--input-padding-x);\n}\n\n.form-label-group > label {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  margin-bottom: 0; /* Override default `<label>` margin */\n  line-height: 1.5;\n  color: #495057;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  transition: all 0.1s ease-in-out;\n}\n\n.form-label-group input::-webkit-input-placeholder {\n  color: transparent;\n}\n\n.form-label-group input:-ms-input-placeholder {\n  color: transparent;\n}\n\n.form-label-group input::-ms-input-placeholder {\n  color: transparent;\n}\n\n.form-label-group input::-moz-placeholder {\n  color: transparent;\n}\n\n.form-label-group input::placeholder {\n  color: transparent;\n}\n\n.form-label-group input:not(:placeholder-shown) {\n  padding-top: calc(var(--input-padding-y) + var(--input-padding-y) * (2 / 3));\n  padding-bottom: calc(var(--input-padding-y) / 3);\n}\n\n.form-label-group input:not(:placeholder-shown) ~ label {\n  padding-top: calc(var(--input-padding-y) / 3);\n  padding-bottom: calc(var(--input-padding-y) / 3);\n  font-size: 12px;\n  color: #777;\n}\n.message {\n  font-size: 1em;\n}\n\nimg {\n  border: 0.3rem solid rgba(255, 255, 255, 0.5);\n  border-radius: 50%;\n}\n.fade-enter {\n  opacity:0;\n\n}\n\n.fade-enter-active {\n  transition:opacity 1s;\n}\n\n.fade-leave {\n\n}\n.fade-leave-active{\n  transition: opacity 1s;\n  opacity:0;\n}\n\n.slide-enter {\n \n}\n.slide-enter-active {\n   animation: slide-in 1s ease-out forwads;\n   transition: opacity .5s;\n}\n.slide-leave {\n\n}\n.slide-leave-active {\n   animation: slide-out 1s ease-out forwads;\n   transition: opacity .5s;\n   opacity: 0;\n}\n@keyframes slide-in {\n  from {\n    transform: translateY(20px);\n  }\n  to {\n    transform: translateY(0);\n  }\n  \n}\n\n/* input.invalid label{\n  color:red;\n}  */\n.form-label-group.invalid input {\n  border : 1px solid red;\n  background: #ffc9aa;\n}\n</style>\n"]}]}